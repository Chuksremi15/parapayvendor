[{"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\index.tsx":"1","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\reportWebVitals.ts":"2","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\App.tsx":"3","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\index.ts":"4","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\index.tsx":"5","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\index.ts":"6","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\index.ts":"7","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\index.ts":"8","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\index.ts":"9","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\index.ts":"10","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\index.tsx":"11","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Auth\\index.tsx":"12","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\index.ts":"13","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\FilterFields\\index.tsx":"14","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\AddEviction\\index.tsx":"15","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\PageWrapper\\index.tsx":"16","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Auth\\Signin\\index.tsx":"17","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Addcontestant\\index.tsx":"18","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Eviction\\index.tsx":"19","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\UpForEviction\\index.tsx":"20","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Evictions\\index.tsx":"21","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\UpdateContestant\\index.tsx":"22","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Contestants\\index.tsx":"23","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Contestant\\index.tsx":"24","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Statistics\\index.tsx":"25","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Form\\index.ts":"26","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\index.ts":"27","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Sidebar\\index.tsx":"28","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Alert\\index.tsx":"29","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Card\\index.tsx":"30","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Spinners\\index.tsx":"31","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\PrivateRoute\\index.tsx":"32","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\HorizontalNavbar\\index.tsx":"33","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\utils\\index.ts":"34","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Form\\inputs.tsx":"35","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\Contestants.tsx":"36","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\UpForEviction.tsx":"37","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\utils\\formats\\index.tsx":"38","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\constants.ts":"39","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\auth\\index.ts":"40","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\global\\index.ts":"41","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\eviction\\index.ts":"42","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\errorHandler\\index.ts":"43","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\voteSettings\\index.ts":"44","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\auth\\index.ts":"45","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\contestant\\index.ts":"46","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\eviction\\index.ts":"47","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\voteSettings\\index.ts":"48","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\auth\\index.ts":"49","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\account\\index.ts":"50","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\eviction\\index.ts":"51","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\contestant\\index.ts":"52","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\loadingIndicators\\index.ts":"53","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\voteSettings\\index.ts":"54","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\ajaxStatuses\\index.ts":"55","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\contestant\\index.ts":"56","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\errorHandler\\index.ts":"57","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\auth\\index.ts":"58","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\contestant\\index.ts":"59","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\eviction\\index.ts":"60","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\errorHandler\\index.ts":"61","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\voteSettings\\index.ts":"62","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\reusables\\index.ts":"63","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\axios\\index.ts":"64","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Form\\FileUpload.tsx":"65","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\dashboardStarts\\index.ts":"66","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\dashboardStarts\\index.ts":"67","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\dashboardStarts\\index.ts":"68","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\dashboardStarts\\index.ts":"69","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\WalletHistory.tsx":"70","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\misc\\index.ts":"71","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\wallet\\index.ts":"72","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\wallet\\index.ts":"73","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\misc\\index.ts":"74","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\wallet\\index.ts":"75","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\misc\\index.ts":"76","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\SetWalletPin\\index.tsx":"77","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\BankInformation\\index.tsx":"78","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Wallet\\index.tsx":"79","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\VoteSettings\\index.tsx":"80","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\wallet\\index.ts":"81","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\misc\\index.ts":"82","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Modal\\index.ts":"83","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Modal\\WithdrawalModal\\index.tsx":"84","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\EvictedContestantsTable.tsx":"85"},{"size":1023,"mtime":1616780585194,"results":"86","hashOfConfig":"87"},{"size":425,"mtime":1616780587492,"results":"88","hashOfConfig":"87"},{"size":389,"mtime":1616780584436,"results":"89","hashOfConfig":"87"},{"size":630,"mtime":1616780586557,"results":"90","hashOfConfig":"87"},{"size":541,"mtime":1616780586222,"results":"91","hashOfConfig":"87"},{"size":1799,"mtime":1617057523032,"results":"92","hashOfConfig":"87"},{"size":286,"mtime":1617057523774,"results":"93","hashOfConfig":"87"},{"size":644,"mtime":1617057523498,"results":"94","hashOfConfig":"87"},{"size":231,"mtime":1617057522738,"results":"95","hashOfConfig":"87"},{"size":244,"mtime":1617057521403,"results":"96","hashOfConfig":"87"},{"size":1609,"mtime":1617057522106,"results":"97","hashOfConfig":"87"},{"size":1044,"mtime":1616780585237,"results":"98","hashOfConfig":"87"},{"size":247,"mtime":1617057520899,"results":"99","hashOfConfig":"87"},{"size":2029,"mtime":1616839315610,"results":"100","hashOfConfig":"87"},{"size":5623,"mtime":1617057521655,"results":"101","hashOfConfig":"87"},{"size":613,"mtime":1617057521421,"results":"102","hashOfConfig":"87"},{"size":3009,"mtime":1616780585330,"results":"103","hashOfConfig":"87"},{"size":4800,"mtime":1616950990158,"results":"104","hashOfConfig":"87"},{"size":13754,"mtime":1622025916117,"results":"105","hashOfConfig":"87"},{"size":1224,"mtime":1616839764578,"results":"106","hashOfConfig":"87"},{"size":1519,"mtime":1617068186594,"results":"107","hashOfConfig":"87"},{"size":5609,"mtime":1617137157604,"results":"108","hashOfConfig":"87"},{"size":1302,"mtime":1616950706355,"results":"109","hashOfConfig":"87"},{"size":2503,"mtime":1616896751693,"results":"110","hashOfConfig":"87"},{"size":3208,"mtime":1616941239078,"results":"111","hashOfConfig":"87"},{"size":56,"mtime":1616950989165,"results":"112","hashOfConfig":"87"},{"size":97,"mtime":1616941061575,"results":"113","hashOfConfig":"87"},{"size":2908,"mtime":1617062374898,"results":"114","hashOfConfig":"87"},{"size":932,"mtime":1616780584476,"results":"115","hashOfConfig":"87"},{"size":5558,"mtime":1617057520695,"results":"116","hashOfConfig":"87"},{"size":1554,"mtime":1616780584750,"results":"117","hashOfConfig":"87"},{"size":1400,"mtime":1616780584666,"results":"118","hashOfConfig":"87"},{"size":1172,"mtime":1616780584621,"results":"119","hashOfConfig":"87"},{"size":27,"mtime":1616780588366,"results":"120","hashOfConfig":"87"},{"size":4217,"mtime":1617057520870,"results":"121","hashOfConfig":"87"},{"size":3485,"mtime":1616950387764,"results":"122","hashOfConfig":"87"},{"size":2218,"mtime":1616780585169,"results":"123","hashOfConfig":"87"},{"size":207,"mtime":1616780588348,"results":"124","hashOfConfig":"87"},{"size":6200,"mtime":1617065060436,"results":"125","hashOfConfig":"87"},{"size":700,"mtime":1616780587211,"results":"126","hashOfConfig":"87"},{"size":485,"mtime":1616780587460,"results":"127","hashOfConfig":"87"},{"size":2814,"mtime":1617061905867,"results":"128","hashOfConfig":"87"},{"size":256,"mtime":1616780587343,"results":"129","hashOfConfig":"87"},{"size":1254,"mtime":1617146572641,"results":"130","hashOfConfig":"87"},{"size":1722,"mtime":1616780586880,"results":"131","hashOfConfig":"87"},{"size":10429,"mtime":1617137157605,"results":"132","hashOfConfig":"87"},{"size":9789,"mtime":1617137157607,"results":"133","hashOfConfig":"87"},{"size":3295,"mtime":1617146572640,"results":"134","hashOfConfig":"87"},{"size":654,"mtime":1616780586598,"results":"135","hashOfConfig":"87"},{"size":555,"mtime":1616780586568,"results":"136","hashOfConfig":"87"},{"size":1285,"mtime":1617057523011,"results":"137","hashOfConfig":"87"},{"size":1451,"mtime":1617067284679,"results":"138","hashOfConfig":"87"},{"size":3214,"mtime":1617146572639,"results":"139","hashOfConfig":"87"},{"size":733,"mtime":1616816015436,"results":"140","hashOfConfig":"87"},{"size":4629,"mtime":1617146572576,"results":"141","hashOfConfig":"87"},{"size":2617,"mtime":1617137157608,"results":"142","hashOfConfig":"87"},{"size":600,"mtime":1616780586746,"results":"143","hashOfConfig":"87"},{"size":953,"mtime":1616937139276,"results":"144","hashOfConfig":"87"},{"size":5049,"mtime":1617065404165,"results":"145","hashOfConfig":"87"},{"size":4804,"mtime":1617057522731,"results":"146","hashOfConfig":"87"},{"size":245,"mtime":1616780586362,"results":"147","hashOfConfig":"87"},{"size":1917,"mtime":1617146572492,"results":"148","hashOfConfig":"87"},{"size":700,"mtime":1617057523553,"results":"149","hashOfConfig":"87"},{"size":1322,"mtime":1616780586907,"results":"150","hashOfConfig":"87"},{"size":2476,"mtime":1617057520768,"results":"151","hashOfConfig":"87"},{"size":1580,"mtime":1616950992679,"results":"152","hashOfConfig":"87"},{"size":2110,"mtime":1616950990929,"results":"153","hashOfConfig":"87"},{"size":1061,"mtime":1616950991613,"results":"154","hashOfConfig":"87"},{"size":3315,"mtime":1616950992180,"results":"155","hashOfConfig":"87"},{"size":1461,"mtime":1616950989820,"results":"156","hashOfConfig":"87"},{"size":1611,"mtime":1617057523526,"results":"157","hashOfConfig":"87"},{"size":5945,"mtime":1617057523647,"results":"158","hashOfConfig":"87"},{"size":538,"mtime":1617057523145,"results":"159","hashOfConfig":"87"},{"size":475,"mtime":1617057523100,"results":"160","hashOfConfig":"87"},{"size":4327,"mtime":1617057522814,"results":"161","hashOfConfig":"87"},{"size":890,"mtime":1617057522754,"results":"162","hashOfConfig":"87"},{"size":4505,"mtime":1617057521487,"results":"163","hashOfConfig":"87"},{"size":5394,"mtime":1617057521371,"results":"164","hashOfConfig":"87"},{"size":3517,"mtime":1617057522560,"results":"165","hashOfConfig":"87"},{"size":7321,"mtime":1617146572489,"results":"166","hashOfConfig":"87"},{"size":2589,"mtime":1617057523820,"results":"167","hashOfConfig":"87"},{"size":516,"mtime":1617057523783,"results":"168","hashOfConfig":"87"},{"size":35,"mtime":1617057520905,"results":"169","hashOfConfig":"87"},{"size":4176,"mtime":1617057520983,"results":"170","hashOfConfig":"87"},{"size":2050,"mtime":1617068582506,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"t2pc6b",{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"174"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"174"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"174"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"174"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"174"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"174"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"174"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"174"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"174"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"174"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"174"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"174"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"174"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"174"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"174"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"174"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"174"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"174"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"174"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"174"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"174"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"174"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"174"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"174"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"174"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"174"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"174"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"174"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"174"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"174"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"174"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"174"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"174"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"174"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"376"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"174"},"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\index.tsx",[],[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\reportWebVitals.ts",["380"],"import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\App.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\index.ts",["381"],"import { createStore, applyMiddleware, AnyAction } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nimport rootSaga from \"./sagas\";\nimport allReducers from \"./reducers\";\nexport * from \"./types\";\nexport * from \"./actions\";\nconst sagaMiddleWare = createSagaMiddleware();\n\nexport type AppState = ReturnType<typeof allReducers>;\nexport const store = createStore(\n  allReducers,\n  composeWithDevTools(applyMiddleware(sagaMiddleWare))\n);\nexport const persistor = persistStore(store);\nsagaMiddleWare.run(rootSaga);\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\index.ts",["382"],"import { spawn } from \"redux-saga/effects\";\nimport authSagas from \"./auth\";\nimport contestantManagementSagas from \"./contestant\";\nimport evictionManagementSagas from \"./eviction\";\nimport voteSettingsSagas from \"./voteSettings\";\nimport dashboardStartsSagas from \"./dashboardStarts\";\nimport miscSagas from \"./misc\";\nimport walletManagementSagas from \"./wallet\";\n\nexport default function* rootSaga() {\n  yield spawn(authSagas);\n  yield spawn(contestantManagementSagas);\n  yield spawn(evictionManagementSagas);\n  yield spawn(voteSettingsSagas);\n  yield spawn(dashboardStartsSagas);\n  yield spawn(miscSagas);\n  yield spawn(walletManagementSagas);\n}\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Auth\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\FilterFields\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\AddEviction\\index.tsx",["383","384","385","386","387","388","389","390","391","392"],"import React, { useLayoutEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport {\n  FilterHeader,\n  SectionSpinner,\n  ContestantsTable,\n  SubmitButton,\n  useFileUpload,\n  fileTypes,\n  FormInput,\n  TextArea,\n  useAjaxToast,\n} from \"../../components\";\nimport {\n  Box,\n  HStack,\n  Checkbox,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  Center,\n  Square,\n  Image,\n  Text,\n} from \"@chakra-ui/react\";\n\nimport { FaUser } from \"react-icons/fa\";\n// redux import\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  AppState,\n  addContestantRequest,\n  getContestantsRequest,\n  addEvictionRequest,\n} from \"../../../redux\";\nimport { AiFillCamera } from \"react-icons/ai\";\nimport { useEffect } from \"react\";\n\nconst AddEviction: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const toast = useAjaxToast();\n  const { file, url, FileUpload } = useFileUpload();\n  const [contestantsArray, setContestantsArray] = useState<string[]>([]);\n  const {\n    token,\n    contestantsLoading,\n    contestants,\n    error,\n    success,\n    loading,\n  } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n    const { contestants, contestantsLoading } = state.contestant;\n\n    const { addEviction: loading } = state.loadingIndicators;\n\n    const {\n      success: { addEviction: success },\n      errors: { addEviction: error },\n    } = state.ajaxStatuses;\n    return {\n      token,\n      contestants,\n      contestantsLoading,\n      loading,\n      success,\n      error,\n    };\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      start_date: \"\",\n      end_date: \"\",\n    },\n    validationSchema: yup.object({\n      title: yup.string().required(\"Required\"),\n      start_date: yup.string().required(\"Required\"),\n      end_date: yup.string().required(\"Required\"),\n    }),\n\n    onSubmit: ({ start_date, end_date, title }) => {\n      dispatch(\n        addEvictionRequest({\n          data: {\n            title,\n            start_date,\n            end_date,\n            banner: file as File,\n            constestants: contestantsArray,\n          },\n          token,\n        })\n      );\n    },\n  });\n\n  useLayoutEffect(() => {\n    dispatch(getContestantsRequest({ token }));\n  }, []);\n  useEffect(() => {\n    if (error)\n      toast({\n        status: \"error\",\n        description: error,\n      });\n    if (success) {\n      toast({\n        status: \"success\",\n        description: success,\n      });\n    }\n  }, [success, error]);\n\n  const onChecked = (e: any) => {\n    e.preventDefault();\n    console.log(\"event\", e.target.value);\n    if (contestantsArray.find((el) => el === e.target.value)) {\n      setContestantsArray(\n        contestantsArray.filter((el) => el !== e.target.value)\n      );\n    } else {\n      setContestantsArray([...contestantsArray, e.target.value]);\n    }\n  };\n  console.log(\"Array\", contestantsArray);\n  return (\n    <Box>\n      <Box className=\"padding-top-lg padding-horizontal-xlg\">\n        <div className=\"my-card\">\n          <h1>Add Eviction</h1>\n          <div className=\"my-card-content\">\n            <FormInput\n              flex={1}\n              mb={0}\n              label=\"Title\"\n              {...formik.getFieldProps(\"title\")}\n              errorText={formik.errors.title}\n              placeholder=\"Enter title\"\n            />\n            <FormInput\n              type=\"date\"\n              flex={1}\n              mb={0}\n              label=\"Date\"\n              {...formik.getFieldProps(\"start_date\")}\n              errorText={formik.errors.start_date}\n              placeholder=\"Enter Start Date\"\n            />\n            <FormInput\n              type=\"date\"\n              flex={1}\n              mb={0}\n              label=\"Date\"\n              {...formik.getFieldProps(\"end_date\")}\n              errorText={formik.errors.end_date}\n              placeholder=\"Enter End Date\"\n            />\n            <FileUpload\n              maxFileSize={1}\n              fileType={[fileTypes[\"image/jpeg\"], fileTypes[\"image/png\"]]}\n            >\n              <Square size={150} className=\"bg-gray border-radius-sm\" mb={2}>\n                {file ? (\n                  <Image src={url} flex={1} alt=\"User Avatar\" />\n                ) : (\n                  <FaUser size={120} className=\"color-gray-text\" />\n                )}\n              </Square>\n              <Center direction=\"row\" align=\"center\">\n                <AiFillCamera size={20} className=\"color-primary\" />\n                <Text\n                  ml={2}\n                  className=\"font-sm color-secondary font-weight-500\"\n                >\n                  Upload Image\n                </Text>\n              </Center>\n            </FileUpload>\n            {contestantsLoading ? (\n              <SectionSpinner spinning={true} />\n            ) : (\n              <div className=\"display-grid-3\">\n                {contestants.map((el, index) => (\n                  <Checkbox\n                    key={index}\n                    name=\"contestants\"\n                    value={el._id}\n                    size=\"md\"\n                    colorScheme=\"blue\"\n                    checked={contestantsArray.includes(el._id)}\n                    onChange={(e) => onChecked(e)}\n                  >\n                    {el.firstname} {el.lastname}\n                  </Checkbox>\n                ))}\n              </div>\n            )}\n\n            <SubmitButton action={formik.handleSubmit} loading={loading}>\n              Add Eviction\n            </SubmitButton>\n          </div>\n        </div>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddEviction;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\PageWrapper\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Auth\\Signin\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Addcontestant\\index.tsx",["393","394","395","396","397","398"],"import React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  FilterHeader,\n  SectionSpinner,\n  ContestantsTable,\n  SubmitButton,\n  useAjaxToast,\n  useFileUpload,\n  fileTypes,\n} from \"../../components\";\nimport {\n  Box,\n  Center,\n  FormControl,\n  FormLabel,\n  Input,\n  Square,\n  Textarea,\n  Image,\n  Text,\n  Select,\n} from \"@chakra-ui/react\";\n\nimport { FaUser } from \"react-icons/fa\";\nimport { AiFillCamera } from \"react-icons/ai\";\n// redux import\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  AppState,\n  addContestantRequest,\n  getContestantsRequest,\n} from \"../../../redux\";\n\nconst AddContestants: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const toast = useAjaxToast();\n\n  const { replace } = useHistory();\n\n  const { loading, error, addContestant, token } = useSelector(\n    (state: AppState) => {\n      const { token } = state.auth;\n      const { login: loading } = state.loadingIndicators;\n      const {\n        success: { addContestant },\n        errors: { login: error },\n      } = state.ajaxStatuses;\n      return { loading, error, addContestant, token };\n    }\n  );\n  const { file, url, FileUpload } = useFileUpload();\n  useEffect(() => {\n    if (error)\n      toast({\n        title: \"error\",\n        description: error,\n      });\n  }, [error]);\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      nickname: \"\",\n      description: \"\",\n      gender: \"\",\n    },\n    validationSchema: yup.object({\n      firstname: yup.string().required(\"Required\"),\n      lastname: yup.string().required(\"Required\"),\n      nickname: yup.string().required(\"Required\"),\n      description: yup.string().required(\"Required\"),\n    }),\n\n    onSubmit: ({ firstname, lastname, nickname, description, gender }) => {\n      dispatch(\n        addContestantRequest({\n          data: {\n            nickname,\n            firstname,\n            lastname,\n            description,\n            gender,\n            contestant_image: file as File,\n          },\n          token,\n        })\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (addContestant) {\n      replace(\"/dashboard/contestants\");\n    }\n  }, [addContestant]);\n\n  return (\n    <Box>\n      <Box className=\"padding-top-lg padding-horizontal-xlg\">\n        <div className=\"my-card\">\n          <h1>Add Contestant</h1>\n          <FormControl mb={5}>\n            <FormLabel>First name</FormLabel>\n            <Input\n              type=\"text\"\n              placeholder=\"First name\"\n              {...formik.getFieldProps(\"firstname\")}\n            />\n          </FormControl>\n          <FormControl mb={5}>\n            <FormLabel>Last name</FormLabel>\n            <Input\n              placeholder=\"Last name\"\n              {...formik.getFieldProps(\"lastname\")}\n            />\n          </FormControl>\n          <FormControl mb={5}>\n            <FormLabel>Nickname</FormLabel>\n            <Input\n              type=\"text\"\n              placeholder=\"Nickname\"\n              {...formik.getFieldProps(\"nickname\")}\n            />\n          </FormControl>\n\n          <FormControl mb={5}>\n            <FormLabel>Gender</FormLabel>\n            <Select\n              {...formik.getFieldProps(\"gender\")}\n              placeholder=\"Select Gender\"\n              size=\"md\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"others\">Others</option>\n            </Select>\n          </FormControl>\n          <FormControl mb={5}>\n            <FormLabel>Description</FormLabel>\n            <Textarea {...formik.getFieldProps(\"description\")} />\n          </FormControl>\n\n          <FileUpload\n            maxFileSize={5}\n            fileType={[fileTypes[\"image/jpeg\"], fileTypes[\"image/png\"]]}\n          >\n            <Square size={150} className=\"bg-gray border-radius-sm\" mb={2}>\n              {file ? (\n                <Image src={url} flex={1} alt=\"User Avatar\" />\n              ) : (\n                <FaUser size={120} className=\"color-gray-text\" />\n              )}\n            </Square>\n            <Center direction=\"row\" align=\"center\">\n              <AiFillCamera size={20} className=\"color-primary\" />\n              <Text ml={2} className=\"font-sm color-secondary font-weight-500\">\n                Upload Image\n              </Text>\n            </Center>\n          </FileUpload>\n          <SubmitButton\n            disabled={!(formik.dirty && formik.isValid)}\n            loading={loading}\n            action={formik.handleSubmit}\n          >\n            Add\n          </SubmitButton>\n        </div>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddContestants;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Eviction\\index.tsx",["399","400","401","402","403","404"],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\UpForEviction\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Evictions\\index.tsx",["405","406"],"import React, { useLayoutEffect, useEffect } from \"react\";\nimport {\n  FilterHeader,\n  ContestantsTable,\n  useAjaxToast,\n  FullScreenSpinner,\n} from \"../../components\";\nimport { Box } from \"@chakra-ui/react\";\n\n// redux import\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState, getEvictedContestantsRequest } from \"../../../redux\";\nimport { EvictedontestantsTable } from \"../../../components/Tables/EvictedContestantsTable\";\n\nconst Evicted: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const toast = useAjaxToast();\n\n  const { token, loading, error, contestants } = useSelector(\n    (state: AppState) => {\n      const { token } = state.auth;\n\n      const { evictedContestants: loading } = state.loadingIndicators;\n\n      const { contestants } = state.contestant;\n\n      const {\n        errors: { evictedContestants: error },\n      } = state.ajaxStatuses;\n\n      return {\n        loading,\n        error,\n        token,\n        contestants,\n      };\n    }\n  );\n\n  useEffect(() => {\n    if (error)\n      toast({\n        status: \"error\",\n        description: error,\n      });\n  }, [error]);\n\n  useLayoutEffect(() => {\n    dispatch(getEvictedContestantsRequest({ token }));\n  }, []);\n\n  return (\n    <Box>\n      {loading ? (\n        <FullScreenSpinner spinning={true} />\n      ) : (\n        <Box className=\"padding-top-lg padding-horizontal-xlg\">\n          <EvictedontestantsTable contestants={contestants} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Evicted;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\UpdateContestant\\index.tsx",["407","408","409","410","411","412","413","414","415"],"import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  FilterHeader,\r\n  SectionSpinner,\r\n  ContestantsTable,\r\n  useAjaxToast,\r\n  useFileUpload,\r\n  SubmitButton,\r\n  fileTypes,\r\n} from \"../../components\";\r\nimport {\r\n  Box,\r\n  Center,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Square,\r\n  Textarea,\r\n  Image,\r\n  Text,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\n\r\n// redux import\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  AppState,\r\n  getContestantsRequest,\r\n  updateContestantRequest,\r\n} from \"../../../redux\";\r\n\r\nimport { AiFillCamera } from \"react-icons/ai\";\r\nimport { FaUser } from \"react-icons/fa\";\r\n\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst UpdateContestant: React.FC<RouteComponentProps<{ id: string }>> = ({\r\n  match: { params },\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { replace } = useHistory();\r\n\r\n  const id = params.id;\r\n\r\n  const toast = useAjaxToast();\r\n\r\n  const {\r\n    token,\r\n    error,\r\n    contestantLoading,\r\n    contestant,\r\n    addContestant,\r\n    loading,\r\n  } = useSelector((state: AppState) => {\r\n    const { token } = state.auth;\r\n\r\n    const { login: loading } = state.loadingIndicators;\r\n\r\n    const {\r\n      success: { addContestant },\r\n      errors: { login: error },\r\n    } = state.ajaxStatuses;\r\n    const { contestant, contestantLoading } = state.contestant;\r\n\r\n    return {\r\n      token,\r\n      contestant,\r\n      contestantLoading,\r\n      addContestant,\r\n      error,\r\n      loading,\r\n    };\r\n  });\r\n\r\n  const { file, url, FileUpload, setUrl } = useFileUpload();\r\n  useEffect(() => {\r\n    if (error)\r\n      toast({\r\n        title: \"error\",\r\n        description: error,\r\n      });\r\n  }, [error]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      nickname: \"\",\r\n      description: \"\",\r\n      gender: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      firstname: yup.string().required(\"Required\"),\r\n      lastname: yup.string().required(\"Required\"),\r\n      nickname: yup.string().required(\"Required\"),\r\n      description: yup.string().required(\"Required\"),\r\n      gender: yup.string().required(\"Required\"),\r\n    }),\r\n    onSubmit: (prop) => {\r\n      const data: any = prop;\r\n      if (file) {\r\n        data.contestant_image = file;\r\n      } else {\r\n        data.contestant_image = url;\r\n      }\r\n      dispatch(\r\n        updateContestantRequest({\r\n          id,\r\n          token,\r\n          data: prop,\r\n        })\r\n      );\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (contestant) {\r\n      formik.setValues((values) => ({\r\n        ...values,\r\n        firstname: contestant.firstname,\r\n        lastname: contestant.lastname,\r\n        nickname: contestant.nickname,\r\n        description: contestant.description,\r\n        gender: contestant.gender,\r\n      }));\r\n      setUrl(contestant.contestant_image);\r\n    }\r\n  }, [contestant]);\r\n  useEffect(() => {\r\n    if (addContestant) {\r\n      replace(`/dashboard/contestant/${contestant?._id}`);\r\n    }\r\n  }, [addContestant]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box className=\"padding-top-lg padding-horizontal-xlg\">\r\n        <div className=\"my-card\">\r\n          <h1>Edit Contestant</h1>\r\n          <FormControl mb={5}>\r\n            <FormLabel>First name</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              {...formik.getFieldProps(\"firstname\")}\r\n            />\r\n          </FormControl>\r\n          <FormControl mb={5}>\r\n            <FormLabel>Last name</FormLabel>\r\n            <Input\r\n              placeholder=\"Last name\"\r\n              {...formik.getFieldProps(\"lastname\")}\r\n            />\r\n          </FormControl>\r\n          <FormControl mb={5}>\r\n            <FormLabel>Nickname</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Nickname\"\r\n              {...formik.getFieldProps(\"nickname\")}\r\n            />\r\n          </FormControl>\r\n          <FormControl mb={5}>\r\n            <FormLabel>Gender</FormLabel>\r\n            <Select\r\n              {...formik.getFieldProps(\"gender\")}\r\n              placeholder=\"Select Gender\"\r\n              size=\"md\"\r\n            >\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n              <option value=\"others\">Others</option>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl mb={5}>\r\n            <FormLabel>Description</FormLabel>\r\n            <Textarea {...formik.getFieldProps(\"description\")} />\r\n          </FormControl>\r\n          <FileUpload\r\n            maxFileSize={5}\r\n            fileType={[fileTypes[\"image/jpeg\"], fileTypes[\"image/png\"]]}\r\n          >\r\n            <Square size={150} className=\"bg-gray border-radius-sm\" mb={2}>\r\n              <Image src={url} flex={1} alt=\"User Avatar\" />\r\n            </Square>\r\n            <Center direction=\"row\" align=\"center\">\r\n              <AiFillCamera size={20} className=\"color-primary\" />\r\n              <Text ml={2} className=\"font-sm color-secondary font-weight-500\">\r\n                Upload Image\r\n              </Text>\r\n            </Center>\r\n          </FileUpload>\r\n\r\n          <SubmitButton\r\n            disabled={!(formik.dirty && formik.isValid)}\r\n            loading={loading}\r\n            action={formik.handleSubmit}\r\n          >\r\n            Update\r\n          </SubmitButton>\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UpdateContestant;\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Contestants\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Contestant\\index.tsx",["416","417"],"import React, { useLayoutEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  FilterHeader,\n  SectionSpinner,\n  ContestantsTable,\n} from \"../../components\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { RouteComponentProps } from \"react-router-dom\";\n\n// redux import\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState, getContestantRequest } from \"../../../redux\";\n\nconst Contestant: React.FC<RouteComponentProps<{ id: string }>> = ({\n  match: { params },\n}): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const { token, contestantLoading, contestant } = useSelector(\n    (state: AppState) => {\n      const { token } = state.auth;\n\n      const { contestant, contestantLoading } = state.contestant;\n\n      return {\n        token,\n        contestant,\n        contestantLoading,\n      };\n    }\n  );\n\n  const id = params.id;\n  useLayoutEffect(() => {\n    dispatch(getContestantRequest({ token, id }));\n    console.log(contestant);\n  }, [contestantLoading]);\n\n  return (\n    <Box>\n      <Box className=\"padding-top-lg padding-horizontal-xlg\">\n        {contestantLoading ? (\n          <SectionSpinner spinning={true} />\n        ) : (\n          <div className=\"eviction-card\">\n            <p className=\"heading\">Contestant Details</p>\n            <div className=\"display-grid-2\">\n              <div>\n                <p className=\"eviction-name\">Name</p>\n                <p className=\"eviction-heading\">\n                  {contestant?.firstname} {contestant?.lastname}\n                </p>\n                <p className=\"eviction-name\">NickName</p>\n                <p className=\"eviction-heading\">{contestant?.nickname} </p>\n                <p className=\"eviction-name\">Gender</p>\n                <p className=\"eviction-heading\">{contestant?.gender} </p>\n                <p className=\"eviction-name\">Status</p>\n                <p className=\"eviction-heading\">{contestant?.status}</p>\n              </div>\n\n              <div className=\"eviction-image img-wrap\">\n                <img\n                  src={contestant?.contestant_image}\n                  alt=\"contestant image\"\n                />\n              </div>\n            </div>\n\n            <p className=\"eviction-name\">{contestant?.description} </p>\n\n            <Link to={`/dashboard/edit-contestant/${contestant?._id}`}>\n              <div className=\"card-btn  card-btn-bg\">Edit</div>\n            </Link>\n          </div>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contestant;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Statistics\\index.tsx",["418","419","420"],"import React, { useLayoutEffect } from \"react\";\nimport { DashboardCard } from \"../../components\";\nimport { Box, Wrap, WrapItem, Text } from \"@chakra-ui/react\";\nimport { formatAmount } from \"../../../utils\";\nimport contestants from \"../../../assets/contestants-slant.svg\";\nimport evicted from \"../../../assets/evicted-slant.svg\";\nimport money from \"../../../assets/money-bag-slant.svg\";\nimport upForEviction from \"../../../assets/up-for-eviction-slant.svg\";\nimport votes from \"../../../assets/vote-slant.svg\";\n\nimport { SectionSpinner, WalletHistoryTable } from \"../../components\";\n\n// redux import\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  AppState,\n  getContestantsRequest,\n  getDashboardStartsRequest,\n  getWalletHistoryRequest,\n} from \"../../../redux\";\n\nconst Statistics: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const {\n    token,\n    loading,\n    transactions,\n    dashboard_data,\n    walletHistory,\n  } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n\n    const { dashboard_data, transactions } = state.dashboardStarts;\n\n    const { dashboardStarts: loading, walletHistory } = state.loadingIndicators;\n    return {\n      token,\n      loading,\n      dashboard_data,\n      walletHistory,\n      transactions,\n    };\n  });\n\n  useLayoutEffect(() => {\n    dispatch(getDashboardStartsRequest({ token }));\n\n    dispatch(getWalletHistoryRequest({ token }));\n  }, [getDashboardStartsRequest, getWalletHistoryRequest]);\n\n  return (\n    <Box className=\"padding-top-lg padding-horizontal-xlg\">\n      <Text mb={5} className=\"font-md color-primary font-weight-600\">\n        Dashboard\n      </Text>\n\n      {loading ? (\n        <Box pt={100}>\n          <SectionSpinner spinning={true} />\n        </Box>\n      ) : (\n        <Wrap spacing={5}>\n          <WrapItem>\n            <DashboardCard\n              caption=\"No. of Contestants\"\n              value={dashboard_data?.no_of_contestant}\n              icon={contestants}\n            />\n          </WrapItem>\n          {/* <WrapItem>\n            <DashboardCard\n              caption=\"Up for Eviction\"\n              value={56}\n              icon={upForEviction}\n            />\n          </WrapItem> */}\n          <WrapItem>\n            <DashboardCard\n              caption=\"Evicted Contestants\"\n              value={dashboard_data?.no_of_evicted_contestants}\n              icon={evicted}\n            />\n          </WrapItem>\n          <WrapItem>\n            <DashboardCard\n              caption=\"Total no. of votes\"\n              value={dashboard_data?.total_no_of_votes}\n              icon={votes}\n            />\n          </WrapItem>\n          <WrapItem>\n            <DashboardCard\n              caption=\"Total value of votes\"\n              value={dashboard_data?.total_value_of_votes}\n              icon={money}\n            />\n          </WrapItem>\n        </Wrap>\n      )}\n\n      <Box mt={50}>\n        {walletHistory ? (\n          <Box pt={300}>\n            <SectionSpinner spinning={true} />\n          </Box>\n        ) : (\n          <Box>\n            <WalletHistoryTable transactions={transactions} />\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Statistics;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Form\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Sidebar\\index.tsx",["421","422","423","424","425","426","427","428","429"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  FaSignOutAlt,\n  FaWindows,\n  FaStore,\n  FaTimes,\n  FaCogs,\n} from \"react-icons/fa\";\nimport { MdAccountBalanceWallet, MdKeyboardArrowDown } from \"react-icons/md\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { FaWarehouse } from \"react-icons/fa\";\nimport { Image, Center } from \"@chakra-ui/react\";\nimport logo from \"../../assets/logo.png\";\nimport dashboard from \"../../assets/dashboard.svg\";\nimport contestants from \"../../assets/contestants.svg\";\nimport evicted from \"../../assets/evicted.svg\";\nimport upForEviction from \"../../assets/up-for-eviction.svg\";\nimport { BsWallet } from \"react-icons/bs\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { Box } from \"@chakra-ui/react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../redux\";\n\nexport const LeftSidebar: React.FC = (): JSX.Element => {\n  return (\n    <aside className=\"sidebar bg-primary padding-horizontal-sm\">\n      <Center>\n        <Image src={logo} alt=\"ParaPay Logo\" className=\"logo\" />\n      </Center>\n      <SidebarItem\n        link=\"/dashboard\"\n        svg={dashboard}\n        text=\"dashboard\"\n        exact={true}\n      />\n      <SidebarItem\n        link=\"/dashboard/contestants\"\n        svg={contestants}\n        text=\"contestants\"\n      />\n      <SidebarItem\n        link=\"/dashboard/up-for-eviction\"\n        svg={upForEviction}\n        text=\"up for eviction\"\n      />\n      <SidebarItem link=\"/dashboard/evicted\" svg={evicted} text=\"evicted\" />\n\n      <SidebarItem link=\"/dashboard/wallet\" icon={BsWallet} text=\"Wallet\" />\n      <SidebarItem\n        link=\"/dashboard/vote-settings\"\n        icon={FaCogs}\n        text=\"Vote Settings\"\n      />\n      <Logout />\n    </aside>\n  );\n};\n\nconst SidebarItem = ({ svg, icon: Icon, text, link, ...rest }: any) => {\n  return (\n    <li>\n      <NavLink\n        {...rest}\n        to={link}\n        activeClassName=\"active\"\n        className=\"d-flex align-items-center color-white sidebar-item padding-vertical-sm margin-bottom-sm padding-horizontal-md\"\n      >\n        {svg && <Image src={svg} className=\"icon margin-right-sm\" />}\n        {Icon && <Icon className=\"color-white margin-right-sm\" size={20} />}\n        <span className=\"font-sm capitalize font-weight-500 font-style-normal\">\n          {text}\n        </span>\n      </NavLink>\n    </li>\n  );\n};\n\nconst Logout = (): JSX.Element => {\n  const dispatch = useDispatch();\n  return (\n    <li>\n      <Box\n        as=\"button\"\n        onClick={() => dispatch(logout())}\n        className=\"d-flex align-items-center color-white sidebar-item padding-vertical-sm margin-bottom-sm padding-horizontal-md\"\n      >\n        <BiLogOutCircle className=\"color-white margin-right-sm\" size={20} />\n        <span className=\"font-sm capitalize font-weight-500 font-style-normal\">\n          Logout\n        </span>\n      </Box>\n    </li>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Alert\\index.tsx",["430"],"import React, { useCallback } from \"react\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertProps,\n  Text,\n  useToast,\n  UseToastOptions,\n} from \"@chakra-ui/react\";\n\nexport interface AjaxStatusAlertProps extends AlertProps {\n  message: string;\n}\nexport const AjaxStatusAlert: React.FC<AjaxStatusAlertProps> = ({\n  message,\n  ...rest\n}) => {\n  return (\n    <Alert {...rest} mv={10} variant=\"solid\">\n      <AlertIcon />\n      <Text className=\"color-white font-weight-500 font-xs\">{message}</Text>\n    </Alert>\n  );\n};\n\nexport const useAjaxToast = () => {\n  const toast = useToast();\n  const callToast = useCallback(\n    ({\n      title,\n      description,\n      isClosable,\n      duration = 4000,\n      position = \"top-right\",\n      ...rest\n    }: UseToastOptions) => {\n      toast({\n        title,\n        description,\n        duration,\n        isClosable,\n        position,\n        ...rest,\n      });\n    },\n    []\n  );\n  return callToast;\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Card\\index.tsx",["431","432"],"import React, { useEffect } from \"react\";\nimport {\n  Box,\n  Text,\n  Flex,\n  Image,\n  Stack,\n  useDisclosure,\n  toast,\n} from \"@chakra-ui/react\";\nimport { BiDownArrowCircle } from \"react-icons/bi\";\nimport {\n  AppState,\n  ContestantUpForEvictionProps,\n  manageContestantRequest,\n} from \"../../redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAjaxToast } from \"../Alert\";\n\ndeclare interface StatsCard {\n  caption: string;\n  value: string | number | undefined;\n  icon: string;\n}\n\nexport const DashboardCard: React.FC<StatsCard> = ({\n  value,\n  caption,\n  icon,\n}): JSX.Element => {\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"space-between\"\n      flex={1}\n      height=\"194px\"\n      width=\"200px\"\n      px={5}\n      py={5}\n      className=\"bg-white stats-card\"\n    >\n      <Flex direction=\"column\" justify=\"space-between\" flex={1}>\n        <Text\n          mb={2}\n          lineHeight=\"18px\"\n          className=\"color-primary font-sm font-weight-600\"\n        >\n          {caption}\n        </Text>\n        <Text mb={1} className=\"color-dark font-md font-weight-bold\">\n          {value}\n        </Text>\n      </Flex>\n      <Flex justify=\"flex-end\">\n        <Image src={icon} alt=\"Icon\" width=\"50px\" height=\"auto\" />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport interface ThemeCardProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n  title?: React.ReactNode;\n}\n\nexport const SectionCard: React.FC<ThemeCardProps> = ({\n  children,\n  className,\n  title,\n  ...rest\n}): JSX.Element => {\n  return (\n    <div {...rest} className={`card-shadow bg-white`}>\n      {title && (\n        <div className=\"slim-border-bottom padding-vertical-sm padding-horizontal-md\">\n          {title}\n        </div>\n      )}\n      <div className={`padding-vertical-md padding-horizontal-md ${className}`}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport const EvictionCard: React.FC<ContestantUpForEvictionProps> = ({\n  contestant,\n  ...rest\n}): JSX.Element => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const dispatch = useDispatch();\n  const toast = useAjaxToast();\n  const { token, success, error, loading } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n    const {\n      success: { manageContestant: success },\n      errors: { manageContestant: error },\n    } = state.ajaxStatuses;\n    const { manageContestant: loading } = state.loadingIndicators;\n    return {\n      token,\n      success,\n      error,\n      loading,\n    };\n  });\n  const changeContestantState = (val: string) => {\n    dispatch(\n      manageContestantRequest({\n        token,\n        data: { status: val },\n        id: contestant._id,\n      })\n    );\n    onOpen();\n  };\n  useEffect(() => {\n    if (error && isOpen) {\n      onClose();\n      toast({\n        status: \"error\",\n        description: error,\n      });\n    }\n    if (success && isOpen) {\n      onClose();\n      toast({\n        status: \"success\",\n        description: success,\n      });\n    }\n  }, [success, error]);\n\n  return (\n    <Box\n      flex={1}\n      maxW=\"32%\"\n      p=\"15px 20px\"\n      className=\"card-shadow bg-white\"\n      borderRadius={5}\n    >\n      <Box mb={5}>\n        <Image width=\"100%\" height=\"300px\" src={contestant.contestant_image} />\n      </Box>\n      <Box mb={5}>\n        <Text\n          as=\"h3\"\n          fontWeight=\"500px\"\n          fontSize=\"18px\"\n          lineHeight=\"30.02px\"\n          className=\"color-dark\"\n          isTruncated\n        >\n          {contestant.firstname} {contestant.lastname}\n          <Text\n            className=\"color-gray-text\"\n            fontWeight=\"400px\"\n            as=\"span\"\n            ml=\"5px\"\n          >\n            ({contestant.nickname})\n          </Text>\n        </Text>\n        <Text\n          as=\"h4\"\n          fontWeight=\"normal\"\n          fontSize=\"18px\"\n          lineHeight=\"29px\"\n          className=\"color-gray-text capitalize\"\n        >\n          {contestant.gender}\n        </Text>\n      </Box>\n      <Stack direction=\"row\" justify=\"space-between\">\n        <Flex\n          flex={0.8}\n          align=\"center\"\n          justify=\"space-between\"\n          p=\"5px 10px\"\n          borderRadius={5}\n          className=\"bg-primary color-white\"\n        >\n          <Text fontSize=\"14px\" lineHeight=\"28.51px\" fontWeight=\"normal\">\n            No. of Votes\n          </Text>\n          <Text fontSize=\"16px\" lineHeight=\"39.48px\" fontWeight=\"700\">\n            {rest.vote}\n          </Text>\n        </Flex>\n        <Box position=\"relative\" className=\"tooltip-wrapper\">\n          <Box className=\"bg-primary\" borderRadius={5} p=\"10px 5px\">\n            <BiDownArrowCircle className=\"color-white\" size={24} />\n          </Box>\n          <Flex\n            direction=\"column\"\n            mb={5}\n            py={3}\n            position=\"absolute\"\n            right=\"130%\"\n            top=\"0px\"\n            tabindex=\"0\"\n            className=\"bg-white slim-border card-shadow tooltip\"\n            border=\"none\"\n            minWidth=\"150px\"\n          >\n            <Box\n              className=\"font-sm font-weight-500 color-dark\"\n              as=\"button\"\n              onClick={() => changeContestantState(\"evicted\")}\n              p={3}\n            >\n              Evict\n            </Box>\n            <Box\n              className=\"font-sm font-weight-500 color-dark\"\n              as=\"button\"\n              onClick={() => changeContestantState(\"active\")}\n              p={3}\n            >\n              Save\n            </Box>\n          </Flex>\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Spinners\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\PrivateRoute\\index.tsx",["433","434","435","436","437","438"],"import React, { useEffect, useLayoutEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState } from \"../../redux\";\nimport { FullScreenSpinner } from \"../Spinners\";\nimport { useHistory } from \"react-router-dom\";\ninterface PrivateRouteProps {\n  component: any;\n  path: string;\n  redirectedPath?: string;\n}\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component: Comp,\n  path,\n  redirectedPath = \"/\",\n  ...rest\n}): JSX.Element => {\n  const { location } = useHistory();\n  const dispatch = useDispatch();\n  const { token, isLoggedIn } = useSelector((state: AppState) => {\n    const { token, isLoggedIn } = state.auth;\n\n    return { token, isLoggedIn };\n  });\n  // const token = false;\n  // useLayoutEffect(() => {\n  //   if (token && !isLoggedIn) dispatch(getProfileRequest({ token }));\n  // }, []);\n  // if (loading) return <FullScreenSpinner spinning={loading} />;\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={(props) => {\n        return token ? (\n          <Comp {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: redirectedPath,\n              state: {\n                prevLocation: location.pathname,\n                error: \"Unauthorized Access!\",\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\HorizontalNavbar\\index.tsx",["439"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Flex, Box, Text, Image, Circle } from \"@chakra-ui/react\";\nimport user from \"../../assets/user.png\";\nimport { BsFillBellFill } from \"react-icons/bs\";\nimport { GoThreeBars } from \"react-icons/go\";\n\nexport const HorizontalNavBar: React.FC = (): JSX.Element => {\n  return (\n    <Flex\n      px={20}\n      py={2}\n      justify=\"space-between\"\n      className=\"slim-border-bottom\"\n      width=\"full\"\n    >\n      <Box as=\"button\">\n        <GoThreeBars size={25} />\n      </Box>\n      <Flex align=\"center\">\n        <Box as=\"button\" className=\"notification-bell position-relative\" mr={6}>\n          <Circle\n            size=\"8px\"\n            className=\"bg-danger\"\n            position=\"absolute\"\n            top=\"-2px\"\n            right=\"2px\"\n          />\n          <BsFillBellFill className=\"color-dark\" size={25} />\n        </Box>\n        <Text mr={2} className=\"font-sm font-weight-500 color-dark\">\n          Ibukun Odeku\n        </Text>\n        <Image\n          src={user}\n          className=\"avatar-sm slim-border-primary\"\n          alt=\"User avatar\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\utils\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Form\\inputs.tsx",["440","441","442"],"import React, { useState, memo } from \"react\";\nimport {\n  FormControl,\n  FormControlProps,\n  FormLabel,\n  Input,\n  FormHelperText,\n  Box,\n  Select as ChakraSelect,\n  SelectProps as ChakraSelectProps,\n  Text,\n  Textarea as ChakraTextarea,\n  BoxProps,\n} from \"@chakra-ui/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport interface GlobalProps\n  extends Pick<React.HTMLAttributes<HTMLInputElement>, \"onChange\"> {\n  formHelperText?: string;\n  name: string;\n  value: string;\n  label?: string;\n  placeholder?: string;\n}\nexport type FormInputProps = GlobalProps &\n  FormControlProps & {\n    type?: string;\n    labelClassName?: string;\n    errorText?: string;\n  };\nexport const FormInput: React.FC<FormInputProps> = memo(\n  ({\n    formHelperText,\n    type = \"text\",\n    name,\n    value,\n    label,\n    placeholder,\n    errorText,\n    onChange,\n    labelClassName,\n    ...rest\n  }) => {\n    return (\n      <FormControl mb={5} {...rest}>\n        <Text as=\"label\" className=\"font-weight-500 font-sm margin-bottom-xs\">\n          {label}\n        </Text>\n        <Input\n          type={type}\n          value={value}\n          name={name}\n          id={name}\n          placeholder={placeholder}\n          aria-describedby={`${name}-helper-text`}\n          onChange={onChange}\n          className=\"font-xs\"\n          focusBorderColor=\"#a6a6a6\"\n        />\n        <Text as=\"p\" className=\"color-error font-weight-500 font-sm\">\n          {errorText}\n        </Text>\n        <FormHelperText id={`${name}-helper-text`}>\n          {formHelperText}\n        </FormHelperText>\n      </FormControl>\n    );\n  },\n  (prev, next) => prev.value === next.value\n);\n\ndeclare type TextAreaProps = Omit<GlobalProps, \"onChange\"> &\n  Pick<React.HTMLAttributes<HTMLTextAreaElement>, \"onChange\"> &\n  FormControlProps & {\n    height?: string | number;\n  };\nexport const TextArea: React.FC<TextAreaProps> = ({\n  name,\n  value,\n  label,\n  placeholder,\n  onChange,\n  my = 5,\n  height,\n  ...rest\n}) => {\n  return (\n    <FormControl {...rest} my={my}>\n      <Text as=\"label\" className=\"font-weight-600 font-md margin-bottom-xs\">\n        {label}\n      </Text>\n      <ChakraTextarea\n        value={value}\n        name={name}\n        id={name}\n        height={height}\n        placeholder={placeholder}\n        aria-describedby={`${name}-helper-text`}\n        onChange={onChange}\n        className=\"font-xs\"\n        focusBorderColor=\"#C4C4C4\"\n      />\n    </FormControl>\n  );\n};\n\ndeclare interface SelectProps extends ChakraSelectProps {\n  label?: string;\n  options: {\n    value: string;\n    label: string;\n  }[];\n}\nexport const Select: React.FC<SelectProps> = ({\n  label,\n  options,\n  ...rest\n}): JSX.Element => {\n  return (\n    <Box mb={5}>\n      <Text as=\"label\" className=\"font-weight-500 font-sm margin-bottom-xs\">\n        {label}\n      </Text>\n      <ChakraSelect\n        fontSize=\"0.8em\"\n        iconColor=\"#a6a6a6\"\n        focusBorderColor=\"#a6a6a6\"\n        className=\"capitalize\"\n        {...rest}\n        _placeholder={{ textColor: \"#e0e0e0\" }}\n      >\n        {options.map((option) => (\n          <option\n            className=\"font-sm capitalize\"\n            key={option.value}\n            value={option.value}\n            label={option.label}\n          >\n            {option.label}\n          </option>\n        ))}\n      </ChakraSelect>\n    </Box>\n  );\n};\n\ndeclare interface SubmitButtonProps extends BoxProps {\n  action: () => void;\n  loading?: boolean;\n  disabled?: boolean;\n  spinColor?: \"white\" | \"primary\";\n}\nexport const SubmitButton: React.FC<SubmitButtonProps> = ({\n  children,\n  action,\n  loading,\n  disabled,\n  className,\n  spinColor = \"white\",\n  my = 5,\n  ...rest\n}): JSX.Element => {\n  const colors = {\n    white: \"#fff\",\n    primary: \"#31326c\",\n  };\n  return (\n    <Box\n      as=\"button\"\n      width=\"full\"\n      type=\"button\"\n      textAlign=\"center\"\n      className={`${\n        disabled ? \"btn-primary-disabled cursor-disabled\" : \"bg-primary\"\n      } color-white btn ${className}`}\n      onClick={action}\n      disabled={disabled}\n      my={my}\n      {...rest}\n    >\n      {!loading ? (\n        children\n      ) : (\n        <ClipLoader size={20} color={colors[spinColor]} loading={loading} />\n      )}\n    </Box>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\Contestants.tsx",["443","444","445","446","447"],"import React from \"react\";\nimport { FaEllipsisV } from \"react-icons/fa\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Box,\n  Text,\n  Checkbox,\n  FormControl,\n  FormLabel,\n  Select,\n  Input,\n} from \"@chakra-ui/react\";\n\nimport { SubmitButton } from \"../../components\";\n\nimport { ContestantsProps } from \"../../redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { AppState, manageContestantRequest } from \"../../redux\";\n\n// redux import\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport const ContestantsTable: React.FC<{\n  contestants: ContestantsProps[];\n}> = ({ contestants }): JSX.Element => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <td className=\"\">Name</td>\n          <td className=\"\">Nickname</td>\n          <td className=\"\">Gender</td>\n          <td className=\"\">Status</td>\n          <td className=\"\">Change Status</td>\n\n          <td className=\"\"></td>\n        </tr>\n      </thead>\n      <tbody>\n        {contestants.map((el, index) => (\n          <ContestantRow {...el} key={index} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst ContestantRow: React.FC<ContestantsProps> = ({\n  firstname,\n  lastname,\n  _id,\n  nickname,\n  gender,\n  status,\n}): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const { token, loading } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n\n    const { manageContestant: loading } = state.loadingIndicators;\n\n    return { token, loading };\n  });\n  const formik = useFormik({\n    initialValues: {\n      status: \"\",\n    },\n    validationSchema: yup.object({\n      status: yup.string().required(\"Required\"),\n    }),\n\n    onSubmit: ({ status }) => {\n      console.log(status, _id);\n      dispatch(\n        manageContestantRequest({\n          data: {\n            status,\n          },\n          token,\n          id: _id,\n        })\n      );\n    },\n  });\n  return (\n    <tr>\n      <td className=\"\">\n        {firstname} {lastname}\n      </td>\n      <td className=\"\">{nickname}</td>\n      <td className=\"\">{gender}</td>\n      <td className=\"\">{status}</td>\n      <td className=\"\">\n        <FormControl mb={1}>\n          <Select\n            {...formik.getFieldProps(\"status\")}\n            placeholder=\"Change Status\"\n            size=\"md\"\n          >\n            <option value=\"active\">Active</option>\n            <option value=\"evicted\">Evited</option>\n          </Select>\n        </FormControl>\n        <SubmitButton\n          disabled={!(formik.dirty && formik.isValid)}\n          loading={false}\n          action={formik.handleSubmit}\n        >\n          Change\n        </SubmitButton>\n      </td>\n      <td className=\"\">\n        <Popover placement=\"top\" trigger=\"hover\" closeOnBlur={true}>\n          <PopoverTrigger>\n            <button type=\"button\">\n              <FaEllipsisV size={15} className=\"color-secondary\" />\n            </button>\n          </PopoverTrigger>\n          <PopoverContent\n            className=\"bg-white slim-border card-shadow\"\n            border=\"none\"\n            width=\"150px\"\n          >\n            <Box as=\"button\" p={3}>\n              <Link to={`/dashboard/contestant/${_id}`}>View Contestant</Link>\n            </Box>\n            <Box as=\"button\" p={3}>\n              <Link to={`/dashboard/edit-contestant/${_id}`}>\n                Edit Contestant\n              </Link>\n            </Box>\n          </PopoverContent>\n        </Popover>\n      </td>\n    </tr>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\UpForEviction.tsx",["448","449"],"import React from \"react\";\nimport { FaEllipsisV } from \"react-icons/fa\";\nimport Moment from \"react-moment\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Box,\n  Text,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport { EvictionProps } from \"../../redux\";\nimport { Link } from \"react-router-dom\";\n\nexport const UpForEvictionTable: React.FC<{\n  evictions: EvictionProps[];\n}> = ({ evictions }): JSX.Element => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <td className=\"\">\n            <Checkbox colorScheme=\"purple\" />\n          </td>\n          <td className=\"\">Title</td>\n          <td className=\"\">Start Date</td>\n          <td className=\"\">End Date</td>\n          <td className=\"\">Status</td>\n\n          <td className=\"\"></td>\n        </tr>\n      </thead>\n      <tbody>\n        {evictions.map((el, index) => (\n          <EvictionRow {...el} key={index} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst EvictionRow: React.FC<EvictionProps> = ({\n  title,\n  banner,\n  _id,\n  start_date,\n  end_date,\n  status,\n}): JSX.Element => {\n  return (\n    <tr>\n      <td className=\"\">\n        <Checkbox colorScheme=\"purple\" />\n      </td>\n      <td className=\"\">{title}</td>\n      <td className=\"\">\n        <Moment format=\"YYYY/MM/DD\">{start_date}</Moment>\n      </td>\n      <td className=\"\">\n        <Moment format=\"YYYY/MM/DD\">{end_date}</Moment>\n      </td>\n      <td className=\"\">{status}</td>\n\n      <td className=\"\">\n        <Popover placement=\"top\" trigger=\"hover\" closeOnBlur={true}>\n          <PopoverTrigger>\n            <button type=\"button\">\n              <FaEllipsisV size={15} className=\"color-secondary\" />\n            </button>\n          </PopoverTrigger>\n          <PopoverContent\n            className=\"bg-white slim-border card-shadow\"\n            border=\"none\"\n            width=\"150px\"\n          >\n            <Box as=\"button\" p={3}>\n              <Link to={`/dashboard/eviction/${_id}`}>View Eviction</Link>\n            </Box>\n            <Box as=\"button\" p={3}>\n              <Link to={`/dashboard/edit-contestant/${_id}`}>\n                Edit Contestant\n              </Link>\n            </Box>\n          </PopoverContent>\n        </Popover>\n      </td>\n    </tr>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\utils\\formats\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\auth\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\global\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\eviction\\index.ts",["450","451"],"import { ContestantsProps } from \"../contestant\";\nimport { SuccessResponse, ObjectId, Type, Token } from \"../global\";\nexport interface ContestantUpForEvictionProps {\n  createdAt: string;\n  eviction: ObjectId;\n  updatedAt: string;\n  vendor: ObjectId;\n  vote: number;\n  vote_cost: number;\n  contestant: ContestantsProps;\n  _id: ObjectId;\n}\n\nexport interface EvictionProps {\n  _id: ObjectId;\n  status: \"active\" | \"pending\";\n  vendor: ObjectId;\n  title: string;\n  banner: string;\n  start_date: string;\n  end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  contestants: ContestantUpForEvictionProps[];\n}\n\nexport type GetEvictionsRequestPayload = Token;\n\nexport interface GetEvictionRequestPayload extends Token {\n  id: ObjectId;\n}\n\nexport interface AddEvictionRequestPayload extends Token {\n  data: any;\n}\n\nexport interface UpdateEvictionRequestPayload extends Token {\n  data: any;\n  id: ObjectId;\n}\nexport interface ChangeEvictionStateRequestPayload extends Token {\n  data: {\n    status: string;\n  };\n  id: ObjectId;\n}\nexport type ChangeEvictionStateSuccessPayload = SuccessResponse;\n\nexport interface ChangeEvictionStateRequestProp extends Type {\n  payload: ChangeEvictionStateRequestPayload;\n}\n\nexport interface AddEvictionRequestProp extends Type {\n  payload: AddEvictionRequestPayload;\n}\nexport interface UpdateEvictionRequestProp extends Type {\n  payload: UpdateEvictionRequestPayload;\n}\n\nexport interface GetEvictionsSuccessPayload extends SuccessResponse {\n  evictions: EvictionProps[];\n}\nexport interface GetEvictionSuccessPayload extends SuccessResponse {\n  eviction: EvictionProps;\n}\n\nexport type GetCurrentEvictionRequestPayload = Token;\nexport type GetCurrentEvictionSuccessPayload = SuccessResponse;\n\nexport interface GetEvictionsRequestProps extends Type {\n  payload: GetEvictionsRequestPayload;\n}\nexport interface GetEvictionRequestProps extends Type {\n  payload: GetEvictionRequestPayload;\n}\n\nexport interface GetEvictionsSuccessProps extends Type {\n  payload: GetEvictionsSuccessPayload;\n}\nexport interface GetEvictionSuccessProps extends Type {\n  payload: GetEvictionSuccessPayload;\n}\nexport interface AddEvictionSuccessProps extends Type {\n  payload: GetEvictionSuccessPayload;\n}\nexport interface UpdateEvictionSuccessProps extends Type {\n  payload: GetEvictionSuccessPayload;\n}\nexport interface ChangeEvictionStateSuccessProps extends Type {\n  payload: ChangeEvictionStateSuccessPayload;\n}\nexport interface GetCurrentEvictionRequestProp extends Type {\n  payload: GetCurrentEvictionRequestPayload;\n}\nexport interface GetCurrentEvictionSuccessProp extends Type {\n  payload: GetCurrentEvictionSuccessPayload;\n}\n// Contestant Action Type\nexport type EvictionActions = GetEvictionsSuccessProps &\n  GetEvictionSuccessProps &\n  ChangeEvictionStateSuccessProps &\n  GetCurrentEvictionSuccessProp;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\errorHandler\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\voteSettings\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\auth\\index.ts",["452","453"],"import { call, put, takeLatest, spawn } from \"redux-saga/effects\";\nimport {\n  LOGIN_REQUEST,\n  LoginRequestPayload,\n  LoginSuccessPayload,\n} from \"../../types\";\nimport {\n  loginSuccess,\n  loginFailure,\n  loginRequest,\n  loginLoadingIndicator,\n} from \"../../actions\";\nimport axios, { APISuccessResponse, AxiosReturnType } from \"../axios\";\nimport { clientErrorMessage, delay } from \"../reusables\";\n\nconst ajaxDBCalls = {\n  login: async (\n    payload: LoginRequestPayload\n  ): Promise<AxiosReturnType<LoginSuccessPayload>> => {\n    const response = await axios.post<APISuccessResponse<LoginSuccessPayload>>(\n      \"/vendor/auth/login\",\n      payload\n    );\n    return response;\n  },\n};\n\n// Generators\nfunction* login({ payload }: ReturnType<typeof loginRequest>) {\n  try {\n    yield put(loginLoadingIndicator(true));\n    const {\n      data: {\n        data: { user },\n        ...rest\n      },\n    }: AxiosReturnType = yield call(ajaxDBCalls.login, payload);\n    yield put(loginSuccess({ user, ...rest, token: user.token }));\n    yield put(loginLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    console.log(\"error\", err);\n    console.log(\"error\", err);\n    yield put(loginFailure(errorMessage));\n    yield put(loginLoadingIndicator(false));\n    yield call(delay);\n    yield put(loginFailure(\"\"));\n  }\n}\n\n// Watchers\nfunction* loginWatcher(): IterableIterator<any> {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nexport default function* authSagas() {\n  yield spawn(loginWatcher);\n}\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\contestant\\index.ts",["454","455","456","457","458","459","460","461","462","463","464"],"import { call, put, takeLatest, spawn } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  GET_CONTESTANTS,\r\n  GET_CONTESTANT_REQUEST,\r\n  GetContestantsRequestPayload,\r\n  AddContestantRequestPayload,\r\n  ADD_CONTESTANT_REQUEST,\r\n  GetContestantRequestPayload,\r\n  UpdateContestantRequestPayload,\r\n  UPDATE_CONTESTANT_REQUEST,\r\n  ManageContestantRequestPayload,\r\n  MANAGE_CONTESTANT_REQUEST,\r\n  GET_EVICTED_CONTESTANTS_REQUEST,\r\n} from \"../../types\";\r\n\r\nimport {\r\n  getContestantsRequest,\r\n  getContestantsSuccess,\r\n  getContestantsFailure,\r\n  addContestantRequest,\r\n  addContestantSuccess,\r\n  addContestantFailure,\r\n  getContestantRequest,\r\n  getContestantSuccess,\r\n  updateContestantRequest,\r\n  updateContestantSuccess,\r\n  updateContestantFailure,\r\n  getContestantFailure,\r\n  manageContestantFailure,\r\n  manageContestantRequest,\r\n  manageContestantSuccess,\r\n  loginLoadingIndicator,\r\n  getContestantsLoadingIndicator,\r\n  manageContestantLoadingIndicator,\r\n  getEvictedContestantsLoadingIndicator,\r\n  getEvictedContestantsSuccess,\r\n  getEvictedContestantsFailure,\r\n} from \"../../actions\";\r\n\r\nimport { clientErrorMessage, delay, sendMediaToS3 } from \"../reusables\";\r\n\r\nimport axios, { APISuccessResponse, AxiosReturnType } from \"../axios\";\r\nimport { object } from \"yup\";\r\n\r\nconst ajaxDBCalls = {\r\n  getContestants: async ({\r\n    token,\r\n  }: GetContestantsRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.get<APISuccessResponse>(\r\n      \"/vendor/constestant/list\",\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  getEvictedContestants: async ({\r\n    token,\r\n  }: GetContestantsRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.get<APISuccessResponse>(\r\n      \"/vendor/constestant/list?status=evicted\",\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  getContestant: async ({\r\n    token,\r\n    id,\r\n  }: GetContestantRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.get<APISuccessResponse>(\r\n      `/vendor/constestant/${id}/show`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  addContestant: async ({ token, data }: any): Promise<AxiosReturnType> => {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach((key) => {\r\n      formData.append(`${key}`, data[key as string]);\r\n    });\r\n    const response = await axios.post<APISuccessResponse>(\r\n      \"/vendor/constestant/create\",\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  updateContestant: async ({\r\n    token,\r\n    id,\r\n    data,\r\n  }: UpdateContestantRequestPayload): Promise<AxiosReturnType> => {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach((key) => {\r\n      formData.append(`${key}`, data[key as string]);\r\n    });\r\n    const response = await axios.put<APISuccessResponse>(\r\n      `/vendor/constestant/${id}/update`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  manageContestant: async ({\r\n    token,\r\n    id,\r\n    data,\r\n  }: ManageContestantRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.put<APISuccessResponse>(\r\n      `/vendor/constestant/${id}/manage`,\r\n      data,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n};\r\n\r\n// Generators\r\nfunction* getContestants({\r\n  payload,\r\n}: ReturnType<typeof getContestantsRequest>) {\r\n  yield put(getContestantsLoadingIndicator(true));\r\n  try {\r\n    const {\r\n      data: { contestants, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.getContestants, payload);\r\n\r\n    yield put(getContestantsSuccess({ contestants, ...rest }));\r\n\r\n    yield put(getContestantsLoadingIndicator(false));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(getContestantsFailure(errorMessage));\r\n\r\n    yield put(getContestantsLoadingIndicator(false));\r\n  }\r\n}\r\nfunction* getEvictedContestants({\r\n  payload,\r\n}: ReturnType<typeof getContestantsRequest>) {\r\n  yield put(getEvictedContestantsLoadingIndicator(true));\r\n  try {\r\n    const {\r\n      data: { contestants, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.getEvictedContestants, payload);\r\n\r\n    yield put(getEvictedContestantsSuccess({ contestants, ...rest }));\r\n\r\n    yield put(getEvictedContestantsLoadingIndicator(false));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(getEvictedContestantsFailure(errorMessage));\r\n\r\n    yield put(getEvictedContestantsLoadingIndicator(false));\r\n  }\r\n}\r\nfunction* getContestant({ payload }: ReturnType<typeof getContestantRequest>) {\r\n  try {\r\n    const {\r\n      data: { contestant, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.getContestant, payload);\r\n\r\n    console.log({ contestant, ...rest });\r\n\r\n    yield put(getContestantSuccess({ contestant, ...rest }));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(getContestantFailure(errorMessage));\r\n  }\r\n}\r\nfunction* addContestant({ payload }: ReturnType<typeof addContestantRequest>) {\r\n  try {\r\n    yield put(loginLoadingIndicator(true));\r\n    // if (typeof payload.data.contestant_image !== \"string\") {\r\n    //   const {\r\n    //     data: { url },\r\n    //   } = yield call(sendMediaToS3, {\r\n    //     file: payload.data.contestant_image as File,\r\n    //     token: payload.token as string,\r\n    //   });\r\n    //   payload.data.contestant_image = url.file_url;\r\n    // }\r\n    const {\r\n      data: { contestant, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.addContestant, payload);\r\n\r\n    console.log({ contestant, ...rest });\r\n\r\n    yield put(addContestantSuccess({ contestant, ...rest }));\r\n    yield put(loginLoadingIndicator(false));\r\n    yield call(delay, 1000);\r\n    yield put(addContestantSuccess({ contestant, ...rest, message: \"\" }));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(addContestantFailure(errorMessage));\r\n\r\n    yield put(loginLoadingIndicator(false));\r\n    yield call(delay);\r\n    yield put(addContestantFailure(\"\"));\r\n  }\r\n}\r\n\r\nfunction* updateContestant({\r\n  payload,\r\n}: ReturnType<typeof updateContestantRequest>) {\r\n  yield put(loginLoadingIndicator(true));\r\n  try {\r\n    // if (typeof payload.data.contestant_image !== \"string\") {\r\n    //   const {\r\n    //     data: { url },\r\n    //   } = yield call(sendMediaToS3, {\r\n    //     file: payload.data.contestant_image as File,\r\n    //     token: payload.token as string,\r\n    //   });\r\n    //   payload.data.contestant_image = url.file_url;\r\n    // }\r\n    const {\r\n      data: { contestant, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.updateContestant, payload);\r\n\r\n    console.log({ contestant, ...rest });\r\n\r\n    yield put(updateContestantSuccess({ contestant, ...rest }));\r\n    yield put(loginLoadingIndicator(false));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(updateContestantFailure(errorMessage));\r\n\r\n    yield put(loginLoadingIndicator(false));\r\n    yield call(delay);\r\n    yield put(addContestantFailure(\"\"));\r\n  }\r\n}\r\n\r\nfunction* manageContestant({\r\n  payload,\r\n}: ReturnType<typeof manageContestantRequest>) {\r\n  try {\r\n    yield put(manageContestantLoadingIndicator(true));\r\n    const {\r\n      data: { contestant, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.manageContestant, payload);\r\n\r\n    yield put(manageContestantSuccess({ contestant, ...rest }));\r\n    yield put(manageContestantLoadingIndicator(false));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(manageContestantFailure(errorMessage));\r\n    yield put(manageContestantLoadingIndicator(false));\r\n  }\r\n}\r\n\r\n// Watchers\r\nfunction* getContestantsWatcher(): IterableIterator<any> {\r\n  yield takeLatest(GET_CONTESTANTS, getContestants);\r\n}\r\nfunction* getEvictedContestantsWatcher(): IterableIterator<any> {\r\n  yield takeLatest(GET_EVICTED_CONTESTANTS_REQUEST, getEvictedContestants);\r\n}\r\nfunction* addContestantWatcher(): IterableIterator<any> {\r\n  yield takeLatest(ADD_CONTESTANT_REQUEST, addContestant);\r\n}\r\nfunction* getContestantWatcher(): IterableIterator<any> {\r\n  yield takeLatest(GET_CONTESTANT_REQUEST, getContestant);\r\n}\r\nfunction* updateContestantWatcher(): IterableIterator<any> {\r\n  yield takeLatest(UPDATE_CONTESTANT_REQUEST, updateContestant);\r\n}\r\n\r\nfunction* manageContestantWatcher(): IterableIterator<any> {\r\n  yield takeLatest(MANAGE_CONTESTANT_REQUEST, manageContestant);\r\n}\r\nexport default function* contestantManagementSagas() {\r\n  yield spawn(getContestantsWatcher);\r\n  yield spawn(addContestantWatcher);\r\n  yield spawn(getContestantWatcher);\r\n  yield spawn(updateContestantWatcher);\r\n  yield spawn(manageContestantWatcher);\r\n  yield spawn(getEvictedContestantsWatcher);\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\eviction\\index.ts",["465","466","467","468","469","470","471","472"],"import { call, put, takeLatest, spawn } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  GET_EVICTIONS_REQUEST,\r\n  GET_EVICTION_REQUEST,\r\n  ADD_EVICTION_REQUEST,\r\n  UPDATE_EVICTION_REQUEST,\r\n  CHANGE_EVICTION_STATUS_REQUEST,\r\n  GetEvictionsRequestPayload,\r\n  GetEvictionRequestPayload,\r\n  AddEvictionRequestPayload,\r\n  UpdateEvictionRequestPayload,\r\n  ChangeEvictionStateRequestPayload,\r\n  GetCurrentEvictionRequestPayload,\r\n  GET_CURRENT_EVICTION_REQUEST,\r\n} from \"../../types\";\r\n\r\nimport {\r\n  getEvictionsRequest,\r\n  getEvictionsSuccess,\r\n  getEvictionsFailure,\r\n  getEvictionRequest,\r\n  getEvictionSuccess,\r\n  getEvictionFailure,\r\n  addEvictionRequest,\r\n  addEvictionSuccess,\r\n  addEvictionFailure,\r\n  updateEvictionRequest,\r\n  updateEvictionSuccess,\r\n  updateEvictionFailure,\r\n  changeEvictionStateRequest,\r\n  changeEvictionStateSuccess,\r\n  changeEvictionStateFailure,\r\n  getCurrentEvictionFailure,\r\n  getCurrentEvictionRequest,\r\n  getCurrentEvictionSuccess,\r\n  updateEvictionLoadingIndicator,\r\n  addEvictionLoadingIndicator,\r\n} from \"../../actions\";\r\n\r\nimport { clientErrorMessage, delay, sendMediaToS3 } from \"../reusables\";\r\n\r\nimport axios, { APISuccessResponse, AxiosReturnType } from \"../axios\";\r\n\r\nconst ajaxDBCalls = {\r\n  getEvictions: async ({\r\n    token,\r\n  }: GetEvictionsRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.get<APISuccessResponse>(\r\n      \"/vendor/eviction/fetch\",\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  getEviction: async ({\r\n    token,\r\n    id,\r\n  }: GetEvictionRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.get<APISuccessResponse>(\r\n      `/vendor/eviction/${id}/show-eviction`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  addEviction: async ({\r\n    token,\r\n    data,\r\n  }: AddEvictionRequestPayload): Promise<AxiosReturnType> => {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach((key) => {\r\n      const value = data[key];\r\n      if (Array.isArray(value)) {\r\n        formData.append(`${key}`, JSON.stringify(value));\r\n      } else {\r\n        formData.append(`${key}`, data[key as string]);\r\n      }\r\n    });\r\n    const response = await axios.post<APISuccessResponse>(\r\n      \"/vendor/eviction/create\",\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  updateEviction: async ({\r\n    token,\r\n    id,\r\n    data,\r\n  }: UpdateEvictionRequestPayload): Promise<AxiosReturnType> => {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach((key) => {\r\n      const value = data[key];\r\n      if (Array.isArray(value)) {\r\n        value.forEach((val) => {\r\n          formData.append(`${key}`, val);\r\n        });\r\n      } else {\r\n        formData.append(`${key}`, data[key as string]);\r\n      }\r\n    });\r\n    const response = await axios.put<APISuccessResponse>(\r\n      `/vendor/eviction/${id}/update`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  changeEvictionState: async ({\r\n    token,\r\n    id,\r\n    data,\r\n  }: ChangeEvictionStateRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.put<APISuccessResponse>(\r\n      `/vendor/eviction/${id}/change-eviction-state`,\r\n      data,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n  getCurrentEviction: async ({\r\n    token,\r\n  }: GetCurrentEvictionRequestPayload): Promise<AxiosReturnType> => {\r\n    const response = await axios.get<APISuccessResponse>(\r\n      `/vendor/eviction/current-eviction`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n};\r\n\r\n//Generators\r\nfunction* getEviction({ payload }: ReturnType<typeof getEvictionRequest>) {\r\n  try {\r\n    const {\r\n      data: { eviction, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.getEviction, payload);\r\n    yield put(getEvictionSuccess({ eviction, ...rest }));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(getEvictionFailure(errorMessage));\r\n  }\r\n}\r\n\r\nfunction* getEvictions({ payload }: ReturnType<typeof getEvictionsRequest>) {\r\n  try {\r\n    const {\r\n      data: { evictions, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.getEvictions, payload);\r\n    yield put(getEvictionsSuccess({ evictions, ...rest }));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(getEvictionsFailure(errorMessage));\r\n  }\r\n}\r\n\r\nfunction* addEviction({ payload }: ReturnType<typeof addEvictionRequest>) {\r\n  try {\r\n    yield put(addEvictionLoadingIndicator(true));\r\n    // if (typeof payload.data.banner !== \"string\") {\r\n    //   const {\r\n    //     data: { url },\r\n    //   } = yield call(sendMediaToS3, {\r\n    //     file: payload.data.banner as File,\r\n    //     token: payload.token as string,\r\n    //   });\r\n    //   payload.data.banner = url.file_url;\r\n    // }\r\n\r\n    const {\r\n      data: { eviction, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.addEviction, payload);\r\n\r\n    yield put(addEvictionSuccess({ eviction, ...rest }));\r\n    yield put(addEvictionLoadingIndicator(false));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(addEvictionFailure(errorMessage));\r\n    yield put(addEvictionLoadingIndicator(false));\r\n  }\r\n}\r\n\r\nfunction* updateEviction({\r\n  payload,\r\n}: ReturnType<typeof updateEvictionRequest>) {\r\n  yield put(updateEvictionLoadingIndicator(true));\r\n  try {\r\n    // if (typeof payload.data.banner !== \"string\") {\r\n    //   const {\r\n    //     data: { url },\r\n    //   } = yield call(sendMediaToS3, {\r\n    //     file: payload.data.banner as File,\r\n    //     token: payload.token as string,\r\n    //   });\r\n    //   payload.data.banner = url.file_url;\r\n    // }\r\n\r\n    const {\r\n      data: { eviction, ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.updateEviction, payload);\r\n\r\n    yield put(updateEvictionSuccess({ eviction, ...rest }));\r\n    yield put(updateEvictionLoadingIndicator(false));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(updateEvictionFailure(errorMessage));\r\n    yield put(updateEvictionLoadingIndicator(false));\r\n  }\r\n}\r\n\r\nfunction* changeEvictionState({\r\n  payload,\r\n}: ReturnType<typeof changeEvictionStateRequest>) {\r\n  try {\r\n    const {\r\n      data: { ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.changeEvictionState, payload);\r\n\r\n    yield put(changeEvictionStateSuccess({ ...rest }));\r\n    yield call(delay, 1000);\r\n    yield put(changeEvictionStateSuccess({ message: \"\" }));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(changeEvictionStateFailure(errorMessage));\r\n  }\r\n}\r\n\r\nfunction* getCurrentEviction({\r\n  payload,\r\n}: ReturnType<typeof getCurrentEvictionRequest>) {\r\n  try {\r\n    const {\r\n      data: { ...rest },\r\n    }: AxiosReturnType = yield call(ajaxDBCalls.getCurrentEviction, payload);\r\n\r\n    yield put(getCurrentEvictionSuccess({ ...rest }));\r\n  } catch (err) {\r\n    let errorMessage = \"\";\r\n    if (err.request) errorMessage = clientErrorMessage;\r\n    if (err.response) {\r\n      console.log(\"something is wrong\", err.response.data);\r\n      const { message } = err.response.data;\r\n      errorMessage = message;\r\n    }\r\n    yield put(getCurrentEvictionFailure(errorMessage));\r\n  }\r\n}\r\n\r\n// Watchers\r\nfunction* getEvictionWatcher(): IterableIterator<any> {\r\n  yield takeLatest(GET_EVICTION_REQUEST, getEviction);\r\n}\r\nfunction* getEvictionsWatcher(): IterableIterator<any> {\r\n  yield takeLatest(GET_EVICTIONS_REQUEST, getEvictions);\r\n}\r\nfunction* addEvictionWatcher(): IterableIterator<any> {\r\n  yield takeLatest(ADD_EVICTION_REQUEST, addEviction);\r\n}\r\nfunction* updateEvictionWatcher(): IterableIterator<any> {\r\n  yield takeLatest(UPDATE_EVICTION_REQUEST, updateEviction);\r\n}\r\nfunction* changeEvictionStateWatcher(): IterableIterator<any> {\r\n  yield takeLatest(CHANGE_EVICTION_STATUS_REQUEST, changeEvictionState);\r\n}\r\nfunction* getCurrentEvictionWatcher(): IterableIterator<any> {\r\n  yield takeLatest(GET_CURRENT_EVICTION_REQUEST, getCurrentEviction);\r\n}\r\nexport default function* evictionManagementSagas() {\r\n  yield spawn(getEvictionWatcher);\r\n  yield spawn(getEvictionsWatcher);\r\n  yield spawn(addEvictionWatcher);\r\n  yield spawn(updateEvictionWatcher);\r\n  yield spawn(changeEvictionStateWatcher);\r\n  yield spawn(getCurrentEvictionWatcher);\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\voteSettings\\index.ts",["473","474","475","476","477","478"],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\auth\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\account\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\eviction\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\contestant\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\loadingIndicators\\index.ts",["479"],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\voteSettings\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\ajaxStatuses\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\contestant\\index.ts",["480"],"import { SuccessResponse, ObjectId, Type, Token } from \"../global\";\r\n\r\nexport interface AddContestantRequestPayload extends Token {\r\n  data: any;\r\n}\r\n\r\nexport interface ContestantsProps {\r\n  _id: ObjectId;\r\n  status: \"active\" | \"inactive\";\r\n  vendor: ObjectId;\r\n  firstname: string;\r\n  lastname: string;\r\n  nickname: string;\r\n  gender: string;\r\n  contestant_image: string;\r\n  description: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport type GetContestantsRequestPayload = Token;\r\n\r\nexport interface GetContestantRequestPayload extends Token {\r\n  id: ObjectId;\r\n}\r\nexport interface UpdateContestantRequestPayload\r\n  extends AddContestantRequestPayload {\r\n  id: ObjectId;\r\n}\r\n\r\nexport interface ManageContestantRequestPayload extends Token {\r\n  data: {\r\n    status: string;\r\n  };\r\n  id: ObjectId;\r\n}\r\n\r\nexport interface ManageContestantSuccessPayload extends SuccessResponse {\r\n  contestant: ContestantsProps;\r\n}\r\n\r\nexport interface GetContestantsRequestProp extends Type {\r\n  payload: GetContestantsRequestPayload;\r\n}\r\nexport interface GetContestantRequestProp extends Type {\r\n  payload: GetContestantRequestPayload;\r\n}\r\n\r\nexport interface GetContestantsSuccessPayload extends SuccessResponse {\r\n  contestants: ContestantsProps[];\r\n}\r\nexport interface GetContestantSuccessPayload extends SuccessResponse {\r\n  contestant: ContestantsProps;\r\n}\r\nexport interface UpdateContestantSuccessPayload extends SuccessResponse {\r\n  contestant: ContestantsProps;\r\n}\r\nexport interface AddContestantSuccessPayload extends SuccessResponse {\r\n  contestant: ContestantsProps;\r\n}\r\n\r\nexport interface GetContestantsSuccessProps extends Type {\r\n  payload: GetContestantsSuccessPayload;\r\n}\r\nexport interface GetContestantSuccessProps extends Type {\r\n  payload: GetContestantSuccessPayload;\r\n}\r\nexport interface AddContestantSuccessProp extends Type {\r\n  payload: AddContestantSuccessPayload;\r\n}\r\nexport interface UpdateContestantSuccessProp extends Type {\r\n  payload: UpdateContestantSuccessPayload;\r\n}\r\n\r\nexport interface AddContestantsRequestProp extends Type {\r\n  payload: AddContestantRequestPayload;\r\n}\r\nexport interface UpdateContestantsRequestProp extends Type {\r\n  payload: UpdateContestantRequestPayload;\r\n}\r\n\r\nexport interface ManageContestantRequestProp extends Type {\r\n  payload: ManageContestantRequestPayload;\r\n}\r\nexport interface ManageContestantSuccessProp extends Type {\r\n  payload: ManageContestantSuccessPayload;\r\n}\r\n\r\n// Contestant Action Type\r\nexport type ContestantActions = GetContestantsSuccessProps &\r\n  AddContestantSuccessProp &\r\n  UpdateContestantSuccessProp &\r\n  ManageContestantSuccessProp;\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\errorHandler\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\auth\\index.ts",["481"],"import {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  LOGIN_LOADING_INDICATOR,\n  LoginRequestProp,\n  LoginSuccessProp,\n  LoginRequestPayload,\n  AjaxError,\n  Logout,\n  LoginSuccessPayload,\n  LoadingIndicatorProp,\n  GET_DASHBOARD_STARTS_LOADING_INDICATOR,\n} from \"../../types\";\n\nexport const loginRequest = (prop: LoginRequestPayload): LoginRequestProp => {\n  return {\n    type: LOGIN_REQUEST,\n    payload: prop,\n  };\n};\n\nexport const loginSuccess = (prop: LoginSuccessPayload): LoginSuccessProp => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: prop,\n  };\n};\n\nexport const loginFailure = (error: string): AjaxError => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: { error },\n  };\n};\n\nexport const loginLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: LOGIN_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n\nexport const logout = (): Logout => {\n  return {\n    type: LOGOUT,\n  };\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\contestant\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\eviction\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\errorHandler\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\voteSettings\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\reusables\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\axios\\index.ts",["482","483"],"import axios, { AxiosInstance, AxiosResponse } from \"axios\";\nimport { store, logout, SuccessResponse, dispatchError } from \"../../index\";\n// import\nexport const BASE_URL = \"https://parapay.herokuapp.com/api/v1\";\nexport const DIGITIAL_BASE_URL = \"https://parapay.herokuapp.com/api/v1\";\n\nconst instance: AxiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    switch (err.response.status) {\n      case 503:\n      case 500:\n      case 506:\n        const { status, statusText } = err.response;\n        store.dispatch(dispatchError({ status, statusText }));\n        break;\n      default:\n        break;\n    }\n    if (err.response) {\n      console.log(\"Yes it has expired\");\n      if (err.response.data.message === \"Unauthenticated\") {\n        console.log(\"Yes it has expired\");\n        store.dispatch(logout());\n      }\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport type APISuccessResponse<T = undefined> = T extends undefined\n  ? SuccessResponse & { [name: string]: any }\n  : SuccessResponse & T;\nexport type AxiosReturnType<T = undefined> = T extends undefined\n  ? AxiosResponse<SuccessResponse & { [name: string]: any }>\n  : AxiosResponse<APISuccessResponse<T>>;\n\nexport default instance;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Form\\FileUpload.tsx",["484","485"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport { v4 as uuid } from \"uuid\";\nexport enum fileTypes {\n  \"image/jpeg\" = \"image/jpeg\",\n  \"image/png\" = \"image/png\",\n}\n\ninterface InputFileProps\n  extends Omit<React.HTMLAttributes<HTMLInputElement>, \"onChange\"> {\n  multiple?: boolean;\n  /**This should indicate the maximum file size (in MB unit) that can be uploaded */\n  maxFileSize: number;\n  /**Takes an array of any of the defined @enum {fileTypes} */\n  fileType?: Array<string>;\n  className?: string;\n}\n\nexport const useFileUpload = (initialUrl?: string) => {\n  const [file, setFile] = useState<File | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [url, setUrl] = useState<string | undefined>(initialUrl);\n  useEffect(() => {\n    if (initialUrl) setUrl(initialUrl);\n  }, [initialUrl]);\n  const FileUpload: React.FC<InputFileProps> = ({\n    multiple,\n    maxFileSize,\n    fileType = [\"all\"],\n    children,\n    className,\n    ...rest\n  }): JSX.Element => {\n    const handleFile = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>): void => {\n        event.preventDefault();\n        const file: File = event.target.files![0];\n        // if(fileType.includes)\n        const fileTypeIsValid: boolean =\n          fileType.includes(file.type) || fileType.includes(\"all\");\n        if (!fileTypeIsValid)\n          return setError(`you can only upload ${fileType.concat(\",\")} file`);\n        const sizeIsValid: boolean = file.size / 1024 ** 2 <= maxFileSize;\n        if (!sizeIsValid)\n          return setError(`File must not exceed ${maxFileSize}MB`);\n        setFile(file);\n        setUrl(URL.createObjectURL(file));\n      },\n      []\n    );\n    const fileId = uuid();\n    return (\n      <Box\n        flex={1}\n        display=\"inline-flex\"\n        align=\"center\"\n        justify=\"center\"\n        className={className}\n      >\n        <label\n          htmlFor={`file-${fileId}`}\n          style={{ flex: 1 }}\n          className=\"display-inline-block\"\n        >\n          {children}\n          <input\n            id={`file-${fileId}`}\n            type=\"file\"\n            onChange={handleFile}\n            multiple={multiple}\n            accept={fileType.join(\",\")}\n            className=\"custom-file-input\"\n            {...rest}\n          />\n        </label>\n        <span className=\"color-danger\">{error}</span>\n      </Box>\n    );\n  };\n  return { file, FileUpload, url, setUrl };\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\dashboardStarts\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\dashboardStarts\\index.ts",["486"],"import {\n  AjaxError,\n  GET_WALLET_HISTORY_REQUEST,\n  GET_WALLET_HISTORY_SUCCESS,\n  GET_DASHBOARD_STARTS_REQUEST,\n  GET_DASHBOARD_STARTS_SUCCESS,\n  GET_DASHBOARD_STARTS_FAILURE,\n  GET_WALLET_HISTORY_FAILURE,\n  GET_DASHBOARD_STARTS_LOADING_INDICATOR,\n  GET_WALLET_HISTORY_LOADING_INDICATOR,\n  DashBoardStatsProps,\n  GetDashboardStartsRequestPayload,\n  GetDashboardStartsRequestProp,\n  GetDashboardStartsSuccessPayload,\n  GetDashboardStartsSuccessProp,\n  GetWalletHistoryRequestPayload,\n  GetWalletHistoryRequestProp,\n  GetWalletHistorySuccessPayload,\n  GetWalletHistorySuccessProp,\n  LoadingIndicatorProp,\n} from \"../../types\";\n\nexport const getDashboardStartsRequest = (\n  prop: GetDashboardStartsRequestPayload\n): GetDashboardStartsRequestProp => {\n  return {\n    type: GET_DASHBOARD_STARTS_REQUEST,\n    payload: prop,\n  };\n};\nexport const getWalletHistoryRequest = (\n  prop: GetWalletHistoryRequestPayload\n): GetWalletHistoryRequestProp => {\n  return {\n    type: GET_WALLET_HISTORY_REQUEST,\n    payload: prop,\n  };\n};\n\nexport const getDashboardStartsSuccess = (\n  prop: GetDashboardStartsSuccessPayload\n): GetDashboardStartsSuccessProp => {\n  return {\n    type: GET_DASHBOARD_STARTS_SUCCESS,\n    payload: prop,\n  };\n};\nexport const getWalletHistorySuccess = (\n  prop: GetWalletHistorySuccessPayload\n): GetWalletHistorySuccessProp => {\n  return {\n    type: GET_WALLET_HISTORY_SUCCESS,\n    payload: prop,\n  };\n};\n\nexport const getDashboardStartsFailure = (error: string): AjaxError => {\n  return {\n    type: GET_DASHBOARD_STARTS_FAILURE,\n    payload: { error },\n  };\n};\nexport const getWalletHistoryFailure = (error: string): AjaxError => {\n  return {\n    type: GET_WALLET_HISTORY_FAILURE,\n    payload: { error },\n  };\n};\n\nexport const getDashboardStartsLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: GET_DASHBOARD_STARTS_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n\nexport const getWalletHistoryLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: GET_WALLET_HISTORY_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\dashboardStarts\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\dashboardStarts\\index.ts",["487","488","489","490","491"],"import { call, put, takeLatest, spawn } from \"redux-saga/effects\";\n\nimport { clientErrorMessage, delay, sendMediaToS3 } from \"../reusables\";\n\nimport axios, { APISuccessResponse, AxiosReturnType } from \"../axios\";\nimport {\n  GET_DASHBOARD_STARTS_REQUEST,\n  GetDashboardStartsRequestPayload,\n  GetWalletHistoryRequestPayload,\n  GET_WALLET_HISTORY_REQUEST,\n} from \"../../types\";\nimport {\n  getDashboardStartsFailure,\n  getDashboardStartsRequest,\n  getDashboardStartsSuccess,\n  getDashboardStartsLoadingIndicator,\n  getWalletHistoryRequest,\n  getWalletHistoryLoadingIndicator,\n  getWalletHistorySuccess,\n  getWalletHistoryFailure,\n} from \"../../actions\";\n\nconst ajaxDBCalls = {\n  getDashboardStarts: async ({\n    token,\n  }: GetDashboardStartsRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.get<APISuccessResponse>(\n      `/vendor/dashboard/statistics`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n  getWalletHistory: async ({\n    token,\n  }: GetWalletHistoryRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.get<APISuccessResponse>(\n      `/vendor/dashboard/wallet-history`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n};\n\n//Generators\nfunction* getDashboardStarts({\n  payload,\n}: ReturnType<typeof getDashboardStartsRequest>) {\n  try {\n    yield put(getDashboardStartsLoadingIndicator(true));\n    const {\n      data: { dashboard_data, ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.getDashboardStarts, payload);\n    yield put(getDashboardStartsSuccess({ dashboard_data, ...rest }));\n    yield put(getDashboardStartsLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(getDashboardStartsFailure(errorMessage));\n    yield put(getDashboardStartsLoadingIndicator(false));\n  }\n}\nfunction* getWalletHistory({\n  payload,\n}: ReturnType<typeof getWalletHistoryRequest>) {\n  try {\n    yield put(getWalletHistoryLoadingIndicator(true));\n    const {\n      data: { transactions, ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.getWalletHistory, payload);\n    yield put(getWalletHistorySuccess({ transactions, ...rest }));\n    yield put(getWalletHistoryLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(getWalletHistoryFailure(errorMessage));\n    yield put(getWalletHistoryLoadingIndicator(false));\n  }\n}\n\n// Watchers\nfunction* getDashboardStartsWatcher(): IterableIterator<any> {\n  yield takeLatest(GET_DASHBOARD_STARTS_REQUEST, getDashboardStarts);\n}\nfunction* getWalletHistoryWatcher(): IterableIterator<any> {\n  yield takeLatest(GET_WALLET_HISTORY_REQUEST, getWalletHistory);\n}\n\nexport default function* dashboardStartsSagas() {\n  yield spawn(getDashboardStartsWatcher);\n  yield spawn(getWalletHistoryWatcher);\n}\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\WalletHistory.tsx",["492","493","494","495","496","497","498","499","500"],"import React from \"react\";\nimport { FaEllipsisV } from \"react-icons/fa\";\nimport Moment from \"react-moment\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Box,\n  Text,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport { ContestantsProps, WalletHistoryProps } from \"../../redux\";\nimport { Link } from \"react-router-dom\";\n\nexport const WalletHistoryTable: React.FC<{\n  transactions: WalletHistoryProps[];\n}> = ({ transactions }): JSX.Element => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <td className=\"\">Ref No.</td>\n          <td className=\"\">Type</td>\n          <td className=\"\">Narration</td>\n          <td className=\"\">Name</td>\n          <td className=\"\">Amount</td>\n\n          <td className=\"\">Date</td>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map((el, index) => (\n          <WalletHistoryRow {...el} key={index} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst WalletHistoryRow: React.FC<WalletHistoryProps> = ({\n  transaction_id,\n  transaction_type,\n  transaction_description,\n  name,\n  amount,\n  created_at,\n}): JSX.Element => {\n  return (\n    <tr>\n      <td className=\"\">{transaction_id}</td>\n      <td className=\"\">{transaction_type}</td>\n      <td className=\"\">{transaction_description}</td>\n      <td className=\"\">{name}</td>\n      <td className=\"\">{amount}</td>\n      <td className=\"\">\n        {\" \"}\n        <Moment format=\"YYYY/MM/DD\">{created_at}</Moment>\n      </td>\n    </tr>\n  );\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\misc\\index.ts",["501","502"],"import { call, put, takeLatest, spawn } from \"redux-saga/effects\";\n\nimport { GetBanksRequestPayload, GET_BANKS_REQUEST } from \"../../types\";\n\nimport {\n  getBanksSuccess,\n  getBanksFailure,\n  getBanksLoadingIndicator,\n  getBanksRequest,\n} from \"../../actions\";\n\nimport { clientErrorMessage } from \"../reusables\";\n\nimport axios, { APISuccessResponse, AxiosReturnType } from \"../axios\";\n\nconst ajaxDBCalls = {\n  getBanks: async ({\n    token,\n  }: GetBanksRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.get<APISuccessResponse>(\n      \"/vendor/wallet/bank-list\",\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n};\n\n//Generators\nfunction* getBanks({ payload }: ReturnType<typeof getBanksRequest>) {\n  try {\n    yield put(getBanksLoadingIndicator(true));\n    const {\n      data: { banklist, ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.getBanks, payload);\n    yield put(getBanksSuccess({ banklist, ...rest }));\n    yield put(getBanksLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(getBanksFailure(errorMessage));\n    yield put(getBanksLoadingIndicator(false));\n  }\n}\n\n// Watchers\nfunction* getBanksWatcher(): IterableIterator<any> {\n  yield takeLatest(GET_BANKS_REQUEST, getBanks);\n}\nexport default function* miscSagas() {\n  yield spawn(getBanksWatcher);\n}\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\sagas\\wallet\\index.ts",["503","504","505","506","507","508"],"import { call, put, takeLatest, spawn } from \"redux-saga/effects\";\n\nimport {\n  GetWalletDetailsRequestPayload,\n  SaveWalletDetailsRequestPayload,\n  SetWalletPinRequestPayload,\n  WithdrawalRequestPayload,\n  SAVE_WALLET_DETAILS_REQUEST,\n  GET_WALLET_DETAILS_REQUEST,\n  SET_WALLET_PIN_REQUEST,\n  WITHDRAWAL_REQUEST,\n} from \"../../types\";\n\nimport {\n  getWalletDetailsRequest,\n  getWalletDetailsSuccess,\n  getWalletDetailsFailure,\n  saveWalletDetailsRequest,\n  saveWalletDetailsSuccess,\n  saveWalletDetailsFailure,\n  setWalletPinRequest,\n  setWalletPinSuccess,\n  setWalletPinFailure,\n  withdrawalRequest,\n  withdrawalSuccess,\n  withdrawalFailure,\n  saveWalletDetailsLoadingIndicator,\n  getWalletDetailsLoadingIndicator,\n  setWalletPinLoadingIndicator,\n  withdrawalLoadingIndicator,\n} from \"../../actions\";\n\nimport { clientErrorMessage, delay } from \"../reusables\";\n\nimport axios, { APISuccessResponse, AxiosReturnType } from \"../axios\";\n\nconst ajaxDBCalls = {\n  getWalletDetails: async ({\n    token,\n  }: GetWalletDetailsRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.get<APISuccessResponse>(\n      \"/vendor/wallet/fetch-wallet-details\",\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n  saveWalletDetails: async ({\n    token,\n    data,\n  }: SaveWalletDetailsRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.put<APISuccessResponse>(\n      `/vendor/wallet/save-bank-details`,\n      data,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n  setWalletPin: async ({\n    token,\n    data,\n  }: SetWalletPinRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.put<APISuccessResponse>(\n      \"/vendor/wallet/set-wallet-pin\",\n      data,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n  withdrawal: async ({\n    token,\n    data,\n  }: WithdrawalRequestPayload): Promise<AxiosReturnType> => {\n    const response = await axios.post<APISuccessResponse>(\n      `/vendor/wallet/withdraw`,\n      data,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response;\n  },\n};\n\n//Generators\nfunction* saveWalletDetails({\n  payload,\n}: ReturnType<typeof saveWalletDetailsRequest>) {\n  try {\n    yield put(saveWalletDetailsLoadingIndicator(true));\n    const {\n      data: { ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.saveWalletDetails, payload);\n    yield put(saveWalletDetailsSuccess({ ...rest }));\n    yield put(saveWalletDetailsLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(saveWalletDetailsFailure(errorMessage));\n    yield put(saveWalletDetailsLoadingIndicator(false));\n  }\n}\n\nfunction* getWalletDetails({\n  payload,\n}: ReturnType<typeof getWalletDetailsRequest>) {\n  try {\n    yield put(getWalletDetailsLoadingIndicator(true));\n    const {\n      data: { vendor_wallet, ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.getWalletDetails, payload);\n    yield put(getWalletDetailsSuccess({ vendor_wallet, ...rest }));\n    yield put(getWalletDetailsLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(getWalletDetailsFailure(errorMessage));\n    yield put(getWalletDetailsLoadingIndicator(false));\n  }\n}\n\nfunction* setWalletPin({ payload }: ReturnType<typeof setWalletPinRequest>) {\n  try {\n    yield put(setWalletPinLoadingIndicator(true));\n    const {\n      data: { ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.setWalletPin, payload);\n\n    yield put(setWalletPinSuccess({ ...rest }));\n    yield put(setWalletPinLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(setWalletPinFailure(errorMessage));\n    yield put(setWalletPinLoadingIndicator(false));\n  }\n}\n\nfunction* withdrawal({ payload }: ReturnType<typeof withdrawalRequest>) {\n  try {\n    yield put(withdrawalLoadingIndicator(true));\n    const {\n      data: { ...rest },\n    }: AxiosReturnType = yield call(ajaxDBCalls.withdrawal, payload);\n\n    yield put(withdrawalSuccess({ ...rest }));\n    yield put(withdrawalLoadingIndicator(false));\n  } catch (err) {\n    let errorMessage = \"\";\n    if (err.request) errorMessage = clientErrorMessage;\n    if (err.response) {\n      console.log(\"something is wrong\", err.response.data);\n      const { message } = err.response.data;\n      errorMessage = message;\n    }\n    yield put(withdrawalFailure(errorMessage));\n    yield put(withdrawalLoadingIndicator(false));\n  }\n}\n\n// Watchers\nfunction* saveWalletDetailsWatcher(): IterableIterator<any> {\n  yield takeLatest(SAVE_WALLET_DETAILS_REQUEST, saveWalletDetails);\n}\nfunction* getWalletDetailsWatcher(): IterableIterator<any> {\n  yield takeLatest(GET_WALLET_DETAILS_REQUEST, getWalletDetails);\n}\nfunction* setWalletPinWatcher(): IterableIterator<any> {\n  yield takeLatest(SET_WALLET_PIN_REQUEST, setWalletPin);\n}\nfunction* withdrawalWatcher(): IterableIterator<any> {\n  yield takeLatest(WITHDRAWAL_REQUEST, withdrawal);\n}\nexport default function* walletManagementSagas() {\n  yield spawn(saveWalletDetailsWatcher);\n  yield spawn(getWalletDetailsWatcher);\n  yield spawn(setWalletPinWatcher);\n  yield spawn(withdrawalWatcher);\n}\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\wallet\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\reducers\\misc\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\wallet\\index.ts",["509","510","511","512","513","514","515","516","517","518","519","520","521","522"],"import {\n  AjaxError,\n  GET_WALLET_DETAILS_REQUEST,\n  SAVE_WALLET_DETAILS_REQUEST,\n  SAVE_WALLET_DETAILS_SUCCESS,\n  GET_WALLET_DETAILS_SUCCESS,\n  GET_WALLET_DETAILS_FAILURE,\n  SAVE_WALLET_DETAILS_FAILURE,\n  SET_WALLET_PIN_REQUEST,\n  WITHDRAWAL_REQUEST,\n  CHANGE_EVICTION_STATUS_REQUEST,\n  SET_WALLET_PIN_SUCCESS,\n  WITHDRAWAL_SUCCESS,\n  CHANGE_EVICTION_STATUS_SUCCESS,\n  SET_WALLET_PIN_FAILURE,\n  WITHDRAWAL_FAILURE,\n  CHANGE_EVICTION_STATUS_FAILURE,\n  GetWalletDetailsRequestPayload,\n  GetWalletDetailsSuccessPayload,\n  GetWalletDetailsSuccessProps,\n  SaveWalletDetailsRequestPayload,\n  SaveWalletDetailsSuccessPayload,\n  SaveWalletDetailsSuccessProps,\n  GetWalletDetailsRequestProps,\n  SetWalletPinRequestPayload,\n  SetWalletPinRequestProp,\n  SetWalletPinSuccessProps,\n  WithdrawalRequestPayload,\n  WithdrawalRequestProp,\n  WithdrawalSuccessProps,\n  ChangeEvictionStateRequestPayload,\n  ChangeEvictionStateRequestProp,\n  ChangeEvictionStateSuccessPayload,\n  ChangeEvictionStateSuccessProps,\n  SaveWalletDetailsRequestProps,\n  GetCurrentEvictionRequestPayload,\n  GetCurrentEvictionRequestProp,\n  GetCurrentEvictionSuccessPayload,\n  GET_CURRENT_EVICTION_FAILURE,\n  GET_CURRENT_EVICTION_REQUEST,\n  GET_CURRENT_EVICTION_SUCCESS,\n  GetCurrentEvictionSuccessProp,\n  SetWalletPinSuccesspayload,\n  WithdrawalSuccessPayload,\n  SAVE_WALLET_DETAILS_LOADING_INDICATOR,\n  LoadingIndicatorProp,\n  GET_WALLET_DETAILS_LOADING_INDICATOR,\n  SET_WALLET_PIN_LOADING_INDICATOR,\n  WITHDRAWAL_LOADING_INDICATOR,\n} from \"../../types\";\n\nexport const getWalletDetailsRequest = (\n  prop: GetWalletDetailsRequestPayload\n): GetWalletDetailsRequestProps => {\n  return {\n    type: GET_WALLET_DETAILS_REQUEST,\n    payload: prop,\n  };\n};\n\nexport const getWalletDetailsSuccess = (\n  prop: GetWalletDetailsSuccessPayload\n): GetWalletDetailsSuccessProps => {\n  return {\n    type: GET_WALLET_DETAILS_SUCCESS,\n    payload: prop,\n  };\n};\n\nexport const getWalletDetailsFailure = (error: string): AjaxError => {\n  return {\n    type: GET_WALLET_DETAILS_FAILURE,\n    payload: { error },\n  };\n};\n\nexport const getWalletDetailsLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: GET_WALLET_DETAILS_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n\nexport const saveWalletDetailsRequest = (\n  prop: SaveWalletDetailsRequestPayload\n): SaveWalletDetailsRequestProps => {\n  return {\n    type: SAVE_WALLET_DETAILS_REQUEST,\n    payload: prop,\n  };\n};\n\nexport const saveWalletDetailsSuccess = (\n  prop: SaveWalletDetailsSuccessPayload\n): SaveWalletDetailsSuccessProps => {\n  return {\n    type: SAVE_WALLET_DETAILS_SUCCESS,\n    payload: prop,\n  };\n};\n\nexport const saveWalletDetailsFailure = (error: string): AjaxError => {\n  return {\n    type: SAVE_WALLET_DETAILS_FAILURE,\n    payload: { error },\n  };\n};\n\nexport const saveWalletDetailsLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: SAVE_WALLET_DETAILS_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n\nexport const setWalletPinRequest = (\n  prop: SetWalletPinRequestPayload\n): SetWalletPinRequestProp => {\n  return {\n    type: SET_WALLET_PIN_REQUEST,\n    payload: prop,\n  };\n};\n\nexport const setWalletPinSuccess = (\n  prop: SetWalletPinSuccesspayload\n): SetWalletPinSuccessProps => {\n  return {\n    type: SET_WALLET_PIN_SUCCESS,\n    payload: prop,\n  };\n};\n\nexport const setWalletPinFailure = (error: string): AjaxError => {\n  return {\n    type: SET_WALLET_PIN_FAILURE,\n    payload: { error },\n  };\n};\n\nexport const setWalletPinLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: SET_WALLET_PIN_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n\nexport const withdrawalRequest = (\n  prop: WithdrawalRequestPayload\n): WithdrawalRequestProp => {\n  return {\n    type: WITHDRAWAL_REQUEST,\n    payload: prop,\n  };\n};\n\nexport const withdrawalSuccess = (\n  prop: WithdrawalSuccessPayload\n): WithdrawalSuccessProps => {\n  return {\n    type: WITHDRAWAL_SUCCESS,\n    payload: prop,\n  };\n};\n\nexport const withdrawalFailure = (error: string): AjaxError => {\n  return {\n    type: WITHDRAWAL_FAILURE,\n    payload: { error },\n  };\n};\n\nexport const withdrawalLoadingIndicator = (\n  loading: boolean\n): LoadingIndicatorProp => {\n  return {\n    type: WITHDRAWAL_LOADING_INDICATOR,\n    payload: { loading },\n  };\n};\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\actions\\misc\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\SetWalletPin\\index.tsx",["523","524","525","526","527","528","529"],"import React, { useCallback, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport {\n  Flex,\n  Text,\n  NumberInput,\n  NumberInputField,\n  InputGroup,\n  FormControl,\n  Box,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { SectionCard, SubmitButton, Select } from \"../../components\";\nimport { TiWarning } from \"react-icons/ti\";\nimport { RiBankCardFill } from \"react-icons/ri\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useAjaxToast, FormInput } from \"../../../components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState, getBanksRequest, setWalletPinRequest } from \"../../../redux\";\n// import {   } from 'react-select'\n\nconst SetWalletPin: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { token, success, error, loading } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n    const {\n      success: { setWalletPin: success },\n      errors: { setWalletPin: error },\n    } = state.ajaxStatuses;\n    const { setWalletPin: loading } = state.loadingIndicators;\n    const { banks } = state.misc;\n    return {\n      banks,\n      token,\n      success,\n      error,\n      loading,\n    };\n  });\n  const toast = useAjaxToast();\n  const formik = useFormik({\n    initialValues: {\n      old_pin: \"\",\n      new_pin: \"\",\n      confirm_new_pin: \"\",\n    },\n    validationSchema: yup.object({\n      old_pin: yup.string().required(\"Required\"),\n      new_pin: yup.string().required(\"Required\"),\n      confirm_new_pin: yup.string().required(\"Required\"),\n    }),\n    onSubmit: (props) => {\n      dispatch(setWalletPinRequest({ data: props, token }));\n    },\n  });\n  useEffect(() => {\n    if (error)\n      toast({\n        status: \"error\",\n        description: error,\n      });\n    if (success) {\n      toast({\n        status: \"success\",\n        description: success,\n      });\n    }\n  }, [success, error]);\n\n  return (\n    <SectionCard\n      title={\n        <Flex align=\"center\" wrap=\"nowrap\">\n          <RiBankCardFill size={25} className=\"color-primary margin-right-md\" />\n          <Text>\n            <span className=\"font-weight-500 font-sm color-gray-text capitalize\">\n              Set Wallet Pin\n            </span>\n          </Text>\n        </Flex>\n      }\n    >\n      <Stack\n        direction=\"row\"\n        align=\"center\"\n        spacing={2}\n        justify=\"space-between\"\n        width=\"full\"\n      >\n        <FormControl flex={1} mb={5}>\n          <Text mb={\"2px\"} className=\"color-dark font-sm font-weight-500\">\n            Old Pin\n          </Text>\n          <InputGroup>\n            <NumberInput\n              {...formik.getFieldProps(\"old_pin\")}\n              placeholder=\"Old Pin\"\n            >\n              <NumberInputField\n                {...formik.getFieldProps(\"old_pin\")}\n                px=\"10px\"\n                className=\"color-dark font-weight-500\"\n              />\n            </NumberInput>\n          </InputGroup>\n        </FormControl>\n        <FormControl flex={1} mb={5}>\n          <Text mb={\"2px\"} className=\"color-dark font-sm font-weight-500\">\n            New Pin\n          </Text>\n          <InputGroup>\n            <NumberInput\n              {...formik.getFieldProps(\"new_pin\")}\n              placeholder=\"New Pin\"\n            >\n              <NumberInputField\n                {...formik.getFieldProps(\"new_pin\")}\n                px=\"10px\"\n                className=\"color-dark font-weight-500\"\n              />\n            </NumberInput>\n          </InputGroup>\n        </FormControl>\n        <FormControl flex={1} mb={5}>\n          <Text mb={\"2px\"} className=\"color-dark font-sm font-weight-500\">\n            Confirm New Pin\n          </Text>\n          <InputGroup>\n            <NumberInput\n              max={4}\n              {...formik.getFieldProps(\"confirm_new_pin\")}\n              placeholder=\"Confirm New Pin\"\n            >\n              <NumberInputField\n                max={4}\n                {...formik.getFieldProps(\"confirm_new_pin\")}\n                px=\"10px\"\n                className=\"color-dark font-weight-500\"\n              />\n            </NumberInput>\n          </InputGroup>\n        </FormControl>\n      </Stack>\n      <Flex justify=\"end\">\n        <Box flex={0.2}>\n          <SubmitButton\n            loading={loading}\n            disabled={!(formik.dirty && formik.isValid)}\n            action={formik.handleSubmit}\n          >\n            Set Pin\n          </SubmitButton>\n        </Box>\n      </Flex>\n    </SectionCard>\n  );\n};\n\nexport default SetWalletPin;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\components\\BankInformation\\index.tsx",["530","531"],"import React, { useCallback, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport {\n  Flex,\n  Text,\n  NumberInput,\n  NumberInputField,\n  InputGroup,\n  FormControl,\n  Box,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { SectionCard, SubmitButton, Select } from \"../../components\";\nimport { TiWarning } from \"react-icons/ti\";\nimport { RiBankCardFill } from \"react-icons/ri\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useAjaxToast, FormInput } from \"../../../components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  AppState,\n  getBanksRequest,\n  saveWalletDetailsRequest,\n} from \"../../../redux\";\n// import {   } from 'react-select'\n\nconst BankInformation: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const {\n    getBanksSuccess,\n    getBanksLoading,\n    banks,\n    token,\n    walletDetails,\n    success,\n    error,\n    loading,\n  } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n    const {\n      success: { getBanks: getBanksSuccess, saveWalletDetails: success },\n      errors: { saveWalletDetails: error },\n    } = state.ajaxStatuses;\n    const {\n      getBanks: getBanksLoading,\n      saveWalletDetails: loading,\n    } = state.loadingIndicators;\n    const { banks } = state.misc;\n    const { walletDetails } = state.wallet;\n    return {\n      getBanksSuccess,\n      getBanksLoading,\n      banks,\n      token,\n      walletDetails,\n      success,\n      error,\n      loading,\n    };\n  });\n  const toast = useAjaxToast();\n  const formik = useFormik({\n    initialValues: {\n      bank_name: \"\",\n      account_name: \"\",\n      account_number: \"\",\n      bank_code: \"\",\n    },\n    validationSchema: yup.object({\n      bank_name: yup.string().required(\"Required\"),\n      account_name: yup.string().required(\"Required\"),\n      account_number: yup.string().required(\"Required\"),\n      bank_code: yup.string().required(\"Required\"),\n    }),\n    onSubmit: (props) => {\n      dispatch(saveWalletDetailsRequest({ data: props, token }));\n    },\n  });\n  useLayoutEffect(() => {\n    if (!getBanksSuccess) dispatch(getBanksRequest({ token }));\n  }, []);\n  useEffect(() => {\n    if (error)\n      toast({\n        status: \"error\",\n        description: error,\n      });\n    if (success) {\n      toast({\n        status: \"success\",\n        description: success,\n      });\n    }\n  }, [success, error]);\n\n  useEffect(() => {\n    if (walletDetails?.bank_details) {\n      formik.setValues((values) => ({\n        ...values,\n        bank_name: walletDetails?.bank_details?.bank_name as string,\n        bank_code: walletDetails?.bank_details?.bank_code as string,\n        account_number: walletDetails?.bank_details?.account_number as string,\n        account_name: walletDetails?.bank_details?.account_name as string,\n      }));\n    }\n  }, [walletDetails?.bank_details]);\n  const formatBankCodes = useMemo(\n    () => banks.map((bank) => ({ value: bank.bankcode, label: bank.bankname })),\n    [banks.length]\n  );\n  const handleBankChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    formik.setValues((values) => ({\n      ...values,\n      bank_code: e.target.value,\n      bank_name: formatBankCodes.find((bank) => bank.value === e.target.value)\n        ?.label as string,\n    }));\n  };\n  return (\n    <SectionCard\n      title={\n        <Flex align=\"center\" wrap=\"nowrap\">\n          <RiBankCardFill size={25} className=\"color-primary margin-right-md\" />\n          <Text>\n            <span className=\"font-weight-500 font-sm color-gray-text capitalize\">\n              Bank Information\n            </span>\n          </Text>\n        </Flex>\n      }\n    >\n      <Stack\n        direction=\"row\"\n        align=\"center\"\n        spacing={2}\n        justify=\"space-between\"\n        width=\"full\"\n      >\n        <Box flex={1}>\n          <Select\n            mb={0}\n            isLoading={getBanksLoading}\n            label=\"Bank Name\"\n            placeholder=\"Select...\"\n            options={formatBankCodes}\n            onChange={handleBankChange}\n            value={\n              formatBankCodes.find(\n                (bank) => bank.value === formik.values.bank_code\n              )?.value\n            }\n          />\n        </Box>\n        <FormControl flex={1} mb={5}>\n          <Text mb={\"2px\"} className=\"color-dark font-sm font-weight-500\">\n            Account No.\n          </Text>\n          <InputGroup>\n            <NumberInput\n              {...formik.getFieldProps(\"account_number\")}\n              placeholder=\"Account Number\"\n            >\n              <NumberInputField\n                {...formik.getFieldProps(\"account_number\")}\n                px=\"10px\"\n                className=\"color-dark font-weight-500\"\n              />\n            </NumberInput>\n          </InputGroup>\n        </FormControl>\n        <FormInput\n          flex={1}\n          mb={0}\n          label=\"Account name\"\n          {...formik.getFieldProps(\"account_name\")}\n          errorText={formik.errors.account_name}\n          placeholder=\"Enter account name\"\n        />\n      </Stack>\n      <Flex justify=\"end\">\n        <Box flex={0.2}>\n          <SubmitButton\n            loading={loading}\n            disabled={!(formik.dirty && formik.isValid)}\n            action={formik.handleSubmit}\n          >\n            Save Changes\n          </SubmitButton>\n        </Box>\n      </Flex>\n    </SectionCard>\n  );\n};\n\nexport default BankInformation;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\Wallet\\index.tsx",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546"],"import {\n  Modal,\n  Flex,\n  Stack,\n  FormControl,\n  InputGroup,\n  InputLeftElement,\n  NumberInput,\n  NumberInputField,\n  Text,\n  Box,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport React, { useLayoutEffect } from \"react\";\nimport { BsWallet } from \"react-icons/bs\";\nimport { formatAmount } from \"../../../utils\";\nimport {\n  BankInformation,\n  FullScreenSpinnerWithText,\n  SectionCard,\n  SetWalletPin,\n  SubmitButton,\n  useAjaxToast,\n  WithdrawalModal,\n} from \"../../components\";\nimport { FaWallet } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  AppState,\n  saveWalletDetailsRequest,\n  getBanksRequest,\n  getWalletDetailsRequest,\n} from \"../../../redux\";\n\nconst Wallet = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const {\n    getWalletDetailsSuccess,\n    getWalletDetailsLoading,\n    token,\n    walletDetails,\n    success,\n    error,\n    loading,\n  } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n    const {\n      success: {\n        getWalletDetails: getWalletDetailsSuccess,\n        withdrawal: success,\n      },\n      errors: { saveWalletDetails: error },\n    } = state.ajaxStatuses;\n    const {\n      getWalletDetails: getWalletDetailsLoading,\n      saveWalletDetails: loading,\n    } = state.loadingIndicators;\n    const { walletDetails } = state.wallet;\n    return {\n      getWalletDetailsSuccess,\n      getWalletDetailsLoading,\n      token,\n      walletDetails,\n      success,\n      error,\n      loading,\n    };\n  });\n  const toast = useAjaxToast();\n  useLayoutEffect(() => {\n    if (!getWalletDetailsSuccess) dispatch(getWalletDetailsRequest({ token }));\n  }, []);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  if (getWalletDetailsLoading)\n    return (\n      <FullScreenSpinnerWithText\n        spinning={getWalletDetailsLoading}\n        text=\"Preparing Wallet\"\n      />\n    );\n  return (\n    <div>\n      <Stack direction=\"column\" spacing=\"40px\">\n        <Stack direction=\"row\" spacing=\"10px\" align=\"stretch\">\n          <Box flex={0.25}>\n            <SectionCard\n              title={\n                <Flex align=\"center\" justify=\"space-between\" wrap=\"nowrap\">\n                  <FaWallet size={25} className=\"color-primary\" />\n                  <Text>\n                    <span className=\"font-weight-500 font-sm color-gray-text capitalize\">\n                      Wallet balance\n                    </span>\n                  </Text>\n                </Flex>\n              }\n            >\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                align=\"center\"\n                className=\"padding-vertical-sm\"\n              >\n                <span className=\"font-xlg\">\n                  {formatAmount(\n                    walletDetails?.available_balance\n                      ? +walletDetails?.available_balance\n                      : 0\n                  )}\n                </span>\n              </Flex>\n              <div className=\"d-flex flex-center\">\n                <SubmitButton className=\"margin-top-md\" action={onOpen}>\n                  Withdraw Fund\n                </SubmitButton>\n              </div>\n              <WithdrawalModal isOpen={isOpen} onClose={onClose} />\n            </SectionCard>\n          </Box>\n          <Box flex={0.75}>\n            <BankInformation />\n          </Box>\n        </Stack>\n        <SetWalletPin />\n      </Stack>\n    </div>\n  );\n};\n\nexport default Wallet;\n","C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\pages\\Dashboard\\VoteSettings\\index.tsx",["547"],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\wallet\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\redux\\types\\misc\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Modal\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Modal\\WithdrawalModal\\index.tsx",["548","549","550"],"import {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  UseDisclosureProps,\n  Text,\n  Stack,\n  FormControl,\n  InputGroup,\n  InputLeftElement,\n  NumberInput,\n  NumberInputField,\n} from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { AppState, withdrawalRequest } from \"../../../redux\";\nimport { SubmitButton } from \"../../Form\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAjaxToast } from \"../../Alert\";\nimport { formatAmount } from \"../../../utils\";\n\nexport const WithdrawalModal: React.FC<UseDisclosureProps> = ({\n  onClose,\n  isOpen,\n}) => {\n  const dispatch = useDispatch();\n  const toast = useAjaxToast();\n  const { loading, error, success, token } = useSelector((state: AppState) => {\n    const { token } = state.auth;\n    const { withdrawal: loading } = state.loadingIndicators;\n    const {\n      success: { withdrawal: success },\n      errors: { withdrawal: error },\n    } = state.ajaxStatuses;\n    return {\n      loading,\n      error,\n      success,\n      token,\n    };\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      amount: \"\",\n      pin: \"\",\n    },\n    validationSchema: yup.object({\n      amount: yup.string().required(\"Required\"),\n      pin: yup.string().required(\"Required\"),\n    }),\n\n    onSubmit: ({ amount, pin }) => {\n      dispatch(\n        withdrawalRequest({\n          token,\n          data: { amount, pin },\n        })\n      );\n    },\n  });\n  useEffect(() => {\n    if (error)\n      toast({\n        status: \"error\",\n        description: error,\n      });\n    if (success) {\n      toast({\n        status: \"success\",\n        description: success,\n      });\n      onClose && onClose();\n    }\n  }, [success, error]);\n\n  return (\n    <Modal\n      onClose={onClose as () => void}\n      size={\"md\"}\n      isOpen={isOpen as boolean}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Withdrawal</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <form onSubmit={formik.handleSubmit} style={{ width: \"100%\" }}>\n            <Flex direction=\"column\" py=\"15px\">\n              <FormControl mb={5} width=\"full\">\n                <Text mb={\"2px\"} className=\"color-dark font-sm font-weight-500\">\n                  Amount\n                </Text>\n                <InputGroup>\n                  <InputLeftElement>\n                    <Text className=\"color-gray-text font-sm\" ml={2}>\n                      NGN\n                    </Text>\n                  </InputLeftElement>\n                  <NumberInput\n                    width=\"full\"\n                    {...formik.getFieldProps(\"amount\")}\n                    placeholder=\"Amount\"\n                  >\n                    <NumberInputField\n                      {...formik.getFieldProps(\"amount\")}\n                      px=\"50px\"\n                      className=\"color-dark font-weight-500\"\n                    />\n                  </NumberInput>\n                </InputGroup>\n              </FormControl>\n              <FormControl flex={1} mb={5} width=\"full\">\n                <Text mb={\"2px\"} className=\"color-dark font-sm font-weight-500\">\n                  Wallet Pin\n                </Text>\n                <InputGroup>\n                  <NumberInput\n                    {...formik.getFieldProps(\"pin\")}\n                    placeholder=\"Wallet Pin\"\n                    width=\"full\"\n                  >\n                    <NumberInputField\n                      {...formik.getFieldProps(\"pin\")}\n                      px=\"10px\"\n                      className=\"color-dark font-weight-500\"\n                    />\n                  </NumberInput>\n                </InputGroup>\n              </FormControl>\n              <Flex direction=\"row\" justify=\"flex-end\" flex={0.6}>\n                <SubmitButton loading={loading} action={formik.handleSubmit}>\n                  Withdraw {formatAmount(+formik.values.amount)}\n                </SubmitButton>\n              </Flex>\n            </Flex>\n          </form>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n",[],"C:\\Users\\Administrator\\Desktop\\Projects\\React_Projects\\parapayVendor\\parapay-vendor\\src\\components\\Tables\\EvictedContestantsTable.tsx",["551","552","553","554","555","556","557"],"import React from \"react\";\nimport { FaEllipsisV } from \"react-icons/fa\";\n\nimport * as yup from \"yup\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Box,\n  Text,\n  Checkbox,\n  FormControl,\n  FormLabel,\n  Select,\n  Input,\n} from \"@chakra-ui/react\";\n\nimport { ContestantsProps } from \"../../redux\";\nimport { Link } from \"react-router-dom\";\n\nexport const EvictedontestantsTable: React.FC<{\n  contestants: ContestantsProps[];\n}> = ({ contestants }): JSX.Element => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <td className=\"\">Name</td>\n          <td className=\"\">Nickname</td>\n          <td className=\"\">Gender</td>\n          <td className=\"\">Status</td>\n          <td className=\"\"></td>\n        </tr>\n      </thead>\n      <tbody>\n        {contestants.map((el, index) => (\n          <EvictedContestantRow {...el} key={index} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst EvictedContestantRow: React.FC<ContestantsProps> = ({\n  firstname,\n  lastname,\n  _id,\n  nickname,\n  gender,\n  status,\n}): JSX.Element => {\n  return (\n    <tr>\n      <td className=\"\">\n        {firstname} {lastname}\n      </td>\n      <td className=\"\">{nickname}</td>\n      <td className=\"\">{gender}</td>\n      <td className=\"\">{status}</td>\n\n      <td className=\"\">\n        <Popover placement=\"top\" trigger=\"hover\" closeOnBlur={true}>\n          <PopoverTrigger>\n            <button type=\"button\">\n              <FaEllipsisV size={15} className=\"color-secondary\" />\n            </button>\n          </PopoverTrigger>\n          <PopoverContent\n            className=\"bg-white slim-border card-shadow\"\n            border=\"none\"\n            width=\"150px\"\n          >\n            <Box as=\"button\" p={3}>\n              <Link to={`/dashboard/contestant/${_id}`}>View Contestant</Link>\n            </Box>\n            <Box as=\"button\" p={3}>\n              <Link to={`/dashboard/edit-contestant/${_id}`}>\n                Edit Contestant\n              </Link>\n            </Box>\n          </PopoverContent>\n        </Popover>\n      </td>\n    </tr>\n  );\n};\n",{"ruleId":"558","severity":1,"message":"559","line":3,"column":25,"nodeType":"560","messageId":"561","endLine":3,"endColumn":57},{"ruleId":"562","severity":1,"message":"563","line":1,"column":40,"nodeType":"564","messageId":"565","endLine":1,"endColumn":49},{"ruleId":"558","severity":1,"message":"559","line":10,"column":16,"nodeType":"566","messageId":"561","endLine":10,"endColumn":36},{"ruleId":"562","severity":1,"message":"567","line":6,"column":3,"nodeType":"564","messageId":"565","endLine":6,"endColumn":15},{"ruleId":"562","severity":1,"message":"568","line":8,"column":3,"nodeType":"564","messageId":"565","endLine":8,"endColumn":19},{"ruleId":"562","severity":1,"message":"569","line":13,"column":3,"nodeType":"564","messageId":"565","endLine":13,"endColumn":11},{"ruleId":"562","severity":1,"message":"570","line":18,"column":3,"nodeType":"564","messageId":"565","endLine":18,"endColumn":9},{"ruleId":"562","severity":1,"message":"571","line":20,"column":3,"nodeType":"564","messageId":"565","endLine":20,"endColumn":14},{"ruleId":"562","severity":1,"message":"572","line":21,"column":3,"nodeType":"564","messageId":"565","endLine":21,"endColumn":12},{"ruleId":"562","severity":1,"message":"573","line":22,"column":3,"nodeType":"564","messageId":"565","endLine":22,"endColumn":8},{"ruleId":"562","severity":1,"message":"574","line":23,"column":3,"nodeType":"564","messageId":"565","endLine":23,"endColumn":11},{"ruleId":"562","severity":1,"message":"575","line":35,"column":3,"nodeType":"564","messageId":"565","endLine":35,"endColumn":23},{"ruleId":"576","severity":1,"message":"577","line":119,"column":25,"nodeType":"578","messageId":"579","endLine":119,"endColumn":28,"suggestions":"580"},{"ruleId":"562","severity":1,"message":"581","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":32},{"ruleId":"562","severity":1,"message":"582","line":1,"column":45,"nodeType":"564","messageId":"565","endLine":1,"endColumn":53},{"ruleId":"562","severity":1,"message":"567","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":15},{"ruleId":"562","severity":1,"message":"583","line":8,"column":3,"nodeType":"564","messageId":"565","endLine":8,"endColumn":17},{"ruleId":"562","severity":1,"message":"568","line":9,"column":3,"nodeType":"564","messageId":"565","endLine":9,"endColumn":19},{"ruleId":"562","severity":1,"message":"584","line":35,"column":3,"nodeType":"564","messageId":"565","endLine":35,"endColumn":24},{"ruleId":"562","severity":1,"message":"567","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":15},{"ruleId":"562","severity":1,"message":"568","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"585","line":47,"column":10,"nodeType":"564","messageId":"565","endLine":47,"endColumn":14},{"ruleId":"576","severity":1,"message":"577","line":114,"column":19,"nodeType":"578","messageId":"579","endLine":114,"endColumn":22,"suggestions":"586"},{"ruleId":"562","severity":1,"message":"587","line":154,"column":9,"nodeType":"564","messageId":"565","endLine":154,"endColumn":18},{"ruleId":"576","severity":1,"message":"577","line":154,"column":25,"nodeType":"578","messageId":"579","endLine":154,"endColumn":28,"suggestions":"588"},{"ruleId":"562","severity":1,"message":"567","line":3,"column":3,"nodeType":"564","messageId":"565","endLine":3,"endColumn":15},{"ruleId":"562","severity":1,"message":"568","line":4,"column":3,"nodeType":"564","messageId":"565","endLine":4,"endColumn":19},{"ruleId":"562","severity":1,"message":"581","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":32},{"ruleId":"562","severity":1,"message":"582","line":1,"column":34,"nodeType":"564","messageId":"565","endLine":1,"endColumn":42},{"ruleId":"562","severity":1,"message":"567","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":15},{"ruleId":"562","severity":1,"message":"583","line":8,"column":3,"nodeType":"564","messageId":"565","endLine":8,"endColumn":17},{"ruleId":"562","severity":1,"message":"568","line":9,"column":3,"nodeType":"564","messageId":"565","endLine":9,"endColumn":19},{"ruleId":"562","severity":1,"message":"584","line":32,"column":3,"nodeType":"564","messageId":"565","endLine":32,"endColumn":24},{"ruleId":"562","severity":1,"message":"589","line":37,"column":10,"nodeType":"564","messageId":"565","endLine":37,"endColumn":16},{"ruleId":"562","severity":1,"message":"590","line":55,"column":5,"nodeType":"564","messageId":"565","endLine":55,"endColumn":22},{"ruleId":"576","severity":1,"message":"577","line":105,"column":19,"nodeType":"578","messageId":"579","endLine":105,"endColumn":22,"suggestions":"591"},{"ruleId":"562","severity":1,"message":"567","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":15},{"ruleId":"562","severity":1,"message":"568","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"592","line":4,"column":10,"nodeType":"564","messageId":"565","endLine":4,"endColumn":22},{"ruleId":"562","severity":1,"message":"593","line":8,"column":8,"nodeType":"564","messageId":"565","endLine":8,"endColumn":21},{"ruleId":"562","severity":1,"message":"584","line":17,"column":3,"nodeType":"564","messageId":"565","endLine":17,"endColumn":24},{"ruleId":"562","severity":1,"message":"594","line":4,"column":3,"nodeType":"564","messageId":"565","endLine":4,"endColumn":15},{"ruleId":"562","severity":1,"message":"595","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":12},{"ruleId":"562","severity":1,"message":"596","line":6,"column":3,"nodeType":"564","messageId":"565","endLine":6,"endColumn":10},{"ruleId":"562","severity":1,"message":"597","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":10},{"ruleId":"562","severity":1,"message":"598","line":10,"column":10,"nodeType":"564","messageId":"565","endLine":10,"endColumn":32},{"ruleId":"562","severity":1,"message":"599","line":10,"column":34,"nodeType":"564","messageId":"565","endLine":10,"endColumn":53},{"ruleId":"562","severity":1,"message":"600","line":11,"column":10,"nodeType":"564","messageId":"565","endLine":11,"endColumn":20},{"ruleId":"562","severity":1,"message":"601","line":12,"column":10,"nodeType":"564","messageId":"565","endLine":12,"endColumn":21},{"ruleId":"576","severity":1,"message":"577","line":60,"column":64,"nodeType":"578","messageId":"579","endLine":60,"endColumn":67,"suggestions":"602"},{"ruleId":"558","severity":1,"message":"559","line":26,"column":29,"nodeType":"560","messageId":"561","endLine":26,"endColumn":34},{"ruleId":"562","severity":1,"message":"603","line":9,"column":3,"nodeType":"564","messageId":"565","endLine":9,"endColumn":8},{"ruleId":"562","severity":1,"message":"604","line":93,"column":34,"nodeType":"564","messageId":"565","endLine":93,"endColumn":41},{"ruleId":"562","severity":1,"message":"605","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":26},{"ruleId":"562","severity":1,"message":"581","line":1,"column":28,"nodeType":"564","messageId":"565","endLine":1,"endColumn":43},{"ruleId":"562","severity":1,"message":"606","line":5,"column":10,"nodeType":"564","messageId":"565","endLine":5,"endColumn":27},{"ruleId":"576","severity":1,"message":"577","line":8,"column":14,"nodeType":"578","messageId":"579","endLine":8,"endColumn":17,"suggestions":"607"},{"ruleId":"562","severity":1,"message":"608","line":19,"column":9,"nodeType":"564","messageId":"565","endLine":19,"endColumn":17},{"ruleId":"562","severity":1,"message":"609","line":20,"column":18,"nodeType":"564","messageId":"565","endLine":20,"endColumn":28},{"ruleId":"562","severity":1,"message":"610","line":2,"column":10,"nodeType":"564","messageId":"565","endLine":2,"endColumn":17},{"ruleId":"562","severity":1,"message":"582","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":25},{"ruleId":"562","severity":1,"message":"572","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":12},{"ruleId":"562","severity":1,"message":"611","line":41,"column":5,"nodeType":"564","messageId":"565","endLine":41,"endColumn":19},{"ruleId":"562","severity":1,"message":"612","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":7},{"ruleId":"562","severity":1,"message":"613","line":11,"column":3,"nodeType":"564","messageId":"565","endLine":11,"endColumn":11},{"ruleId":"562","severity":1,"message":"572","line":13,"column":3,"nodeType":"564","messageId":"565","endLine":13,"endColumn":12},{"ruleId":"562","severity":1,"message":"573","line":15,"column":3,"nodeType":"564","messageId":"565","endLine":15,"endColumn":8},{"ruleId":"562","severity":1,"message":"604","line":63,"column":18,"nodeType":"564","messageId":"565","endLine":63,"endColumn":25},{"ruleId":"562","severity":1,"message":"612","line":9,"column":3,"nodeType":"564","messageId":"565","endLine":9,"endColumn":7},{"ruleId":"562","severity":1,"message":"614","line":44,"column":3,"nodeType":"564","messageId":"565","endLine":44,"endColumn":9},{"ruleId":"576","severity":1,"message":"577","line":34,"column":9,"nodeType":"578","messageId":"579","endLine":34,"endColumn":12,"suggestions":"615"},{"ruleId":"576","severity":1,"message":"577","line":38,"column":9,"nodeType":"578","messageId":"579","endLine":38,"endColumn":12,"suggestions":"616"},{"ruleId":"576","severity":1,"message":"577","line":58,"column":44,"nodeType":"578","messageId":"579","endLine":58,"endColumn":47,"suggestions":"617"},{"ruleId":"558","severity":1,"message":"559","line":62,"column":16,"nodeType":"566","messageId":"561","endLine":62,"endColumn":37},{"ruleId":"562","severity":1,"message":"618","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":30},{"ruleId":"562","severity":1,"message":"619","line":41,"column":37,"nodeType":"564","messageId":"565","endLine":41,"endColumn":50},{"ruleId":"562","severity":1,"message":"620","line":44,"column":10,"nodeType":"564","messageId":"565","endLine":44,"endColumn":16},{"ruleId":"576","severity":1,"message":"577","line":81,"column":42,"nodeType":"578","messageId":"579","endLine":81,"endColumn":45,"suggestions":"621"},{"ruleId":"576","severity":1,"message":"577","line":307,"column":53,"nodeType":"578","messageId":"579","endLine":307,"endColumn":56,"suggestions":"622"},{"ruleId":"576","severity":1,"message":"577","line":310,"column":60,"nodeType":"578","messageId":"579","endLine":310,"endColumn":63,"suggestions":"623"},{"ruleId":"576","severity":1,"message":"577","line":313,"column":52,"nodeType":"578","messageId":"579","endLine":313,"endColumn":55,"suggestions":"624"},{"ruleId":"576","severity":1,"message":"577","line":316,"column":52,"nodeType":"578","messageId":"579","endLine":316,"endColumn":55,"suggestions":"625"},{"ruleId":"576","severity":1,"message":"577","line":319,"column":55,"nodeType":"578","messageId":"579","endLine":319,"endColumn":58,"suggestions":"626"},{"ruleId":"576","severity":1,"message":"577","line":323,"column":55,"nodeType":"578","messageId":"579","endLine":323,"endColumn":58,"suggestions":"627"},{"ruleId":"558","severity":1,"message":"559","line":326,"column":16,"nodeType":"566","messageId":"561","endLine":326,"endColumn":53},{"ruleId":"562","severity":1,"message":"619","line":41,"column":37,"nodeType":"564","messageId":"565","endLine":41,"endColumn":50},{"ruleId":"576","severity":1,"message":"577","line":297,"column":50,"nodeType":"578","messageId":"579","endLine":297,"endColumn":53,"suggestions":"628"},{"ruleId":"576","severity":1,"message":"577","line":300,"column":51,"nodeType":"578","messageId":"579","endLine":300,"endColumn":54,"suggestions":"629"},{"ruleId":"576","severity":1,"message":"577","line":303,"column":50,"nodeType":"578","messageId":"579","endLine":303,"endColumn":53,"suggestions":"630"},{"ruleId":"576","severity":1,"message":"577","line":306,"column":53,"nodeType":"578","messageId":"579","endLine":306,"endColumn":56,"suggestions":"631"},{"ruleId":"576","severity":1,"message":"577","line":309,"column":58,"nodeType":"578","messageId":"579","endLine":309,"endColumn":61,"suggestions":"632"},{"ruleId":"576","severity":1,"message":"577","line":312,"column":57,"nodeType":"578","messageId":"579","endLine":312,"endColumn":60,"suggestions":"633"},{"ruleId":"558","severity":1,"message":"559","line":315,"column":16,"nodeType":"566","messageId":"561","endLine":315,"endColumn":51},{"ruleId":"562","severity":1,"message":"634","line":4,"column":3,"nodeType":"564","messageId":"565","endLine":4,"endColumn":24},{"ruleId":"562","severity":1,"message":"635","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":26},{"ruleId":"562","severity":1,"message":"636","line":22,"column":30,"nodeType":"564","messageId":"565","endLine":22,"endColumn":35},{"ruleId":"576","severity":1,"message":"577","line":100,"column":54,"nodeType":"578","messageId":"579","endLine":100,"endColumn":57,"suggestions":"637"},{"ruleId":"576","severity":1,"message":"577","line":103,"column":57,"nodeType":"578","messageId":"579","endLine":103,"endColumn":60,"suggestions":"638"},{"ruleId":"558","severity":1,"message":"559","line":106,"column":16,"nodeType":"566","messageId":"561","endLine":106,"endColumn":45},{"ruleId":"562","severity":1,"message":"639","line":14,"column":3,"nodeType":"564","messageId":"565","endLine":14,"endColumn":33},{"ruleId":"576","severity":1,"message":"577","line":4,"column":9,"nodeType":"578","messageId":"579","endLine":4,"endColumn":12,"suggestions":"640"},{"ruleId":"562","severity":1,"message":"641","line":14,"column":3,"nodeType":"564","messageId":"565","endLine":14,"endColumn":41},{"ruleId":"576","severity":1,"message":"577","line":39,"column":41,"nodeType":"578","messageId":"579","endLine":39,"endColumn":44,"suggestions":"642"},{"ruleId":"576","severity":1,"message":"577","line":42,"column":55,"nodeType":"578","messageId":"579","endLine":42,"endColumn":58,"suggestions":"643"},{"ruleId":"558","severity":1,"message":"559","line":19,"column":30,"nodeType":"560","messageId":"561","endLine":19,"endColumn":54},{"ruleId":"644","severity":1,"message":"645","line":37,"column":28,"nodeType":"646","messageId":"647","endLine":37,"endColumn":47,"suggestions":"648"},{"ruleId":"562","severity":1,"message":"649","line":11,"column":3,"nodeType":"564","messageId":"565","endLine":11,"endColumn":22},{"ruleId":"562","severity":1,"message":"636","line":3,"column":30,"nodeType":"564","messageId":"565","endLine":3,"endColumn":35},{"ruleId":"562","severity":1,"message":"619","line":3,"column":37,"nodeType":"564","messageId":"565","endLine":3,"endColumn":50},{"ruleId":"576","severity":1,"message":"577","line":95,"column":57,"nodeType":"578","messageId":"579","endLine":95,"endColumn":60,"suggestions":"650"},{"ruleId":"576","severity":1,"message":"577","line":98,"column":55,"nodeType":"578","messageId":"579","endLine":98,"endColumn":58,"suggestions":"651"},{"ruleId":"558","severity":1,"message":"559","line":102,"column":16,"nodeType":"566","messageId":"561","endLine":102,"endColumn":48},{"ruleId":"562","severity":1,"message":"652","line":2,"column":10,"nodeType":"564","messageId":"565","endLine":2,"endColumn":21},{"ruleId":"562","severity":1,"message":"653","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":10},{"ruleId":"562","severity":1,"message":"654","line":6,"column":3,"nodeType":"564","messageId":"565","endLine":6,"endColumn":17},{"ruleId":"562","severity":1,"message":"655","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":17},{"ruleId":"562","severity":1,"message":"656","line":8,"column":3,"nodeType":"564","messageId":"565","endLine":8,"endColumn":6},{"ruleId":"562","severity":1,"message":"612","line":9,"column":3,"nodeType":"564","messageId":"565","endLine":9,"endColumn":7},{"ruleId":"562","severity":1,"message":"613","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":11},{"ruleId":"562","severity":1,"message":"657","line":12,"column":10,"nodeType":"564","messageId":"565","endLine":12,"endColumn":26},{"ruleId":"562","severity":1,"message":"658","line":13,"column":10,"nodeType":"564","messageId":"565","endLine":13,"endColumn":14},{"ruleId":"576","severity":1,"message":"577","line":53,"column":47,"nodeType":"578","messageId":"579","endLine":53,"endColumn":50,"suggestions":"659"},{"ruleId":"558","severity":1,"message":"559","line":56,"column":16,"nodeType":"566","messageId":"561","endLine":56,"endColumn":37},{"ruleId":"562","severity":1,"message":"636","line":33,"column":30,"nodeType":"564","messageId":"565","endLine":33,"endColumn":35},{"ruleId":"576","severity":1,"message":"577","line":182,"column":56,"nodeType":"578","messageId":"579","endLine":182,"endColumn":59,"suggestions":"660"},{"ruleId":"576","severity":1,"message":"577","line":185,"column":55,"nodeType":"578","messageId":"579","endLine":185,"endColumn":58,"suggestions":"661"},{"ruleId":"576","severity":1,"message":"577","line":188,"column":51,"nodeType":"578","messageId":"579","endLine":188,"endColumn":54,"suggestions":"662"},{"ruleId":"576","severity":1,"message":"577","line":191,"column":49,"nodeType":"578","messageId":"579","endLine":191,"endColumn":52,"suggestions":"663"},{"ruleId":"558","severity":1,"message":"559","line":194,"column":16,"nodeType":"566","messageId":"561","endLine":194,"endColumn":49},{"ruleId":"562","severity":1,"message":"664","line":11,"column":3,"nodeType":"564","messageId":"565","endLine":11,"endColumn":33},{"ruleId":"562","severity":1,"message":"665","line":14,"column":3,"nodeType":"564","messageId":"565","endLine":14,"endColumn":33},{"ruleId":"562","severity":1,"message":"639","line":17,"column":3,"nodeType":"564","messageId":"565","endLine":17,"endColumn":33},{"ruleId":"562","severity":1,"message":"666","line":31,"column":3,"nodeType":"564","messageId":"565","endLine":31,"endColumn":36},{"ruleId":"562","severity":1,"message":"667","line":32,"column":3,"nodeType":"564","messageId":"565","endLine":32,"endColumn":33},{"ruleId":"562","severity":1,"message":"668","line":33,"column":3,"nodeType":"564","messageId":"565","endLine":33,"endColumn":36},{"ruleId":"562","severity":1,"message":"669","line":34,"column":3,"nodeType":"564","messageId":"565","endLine":34,"endColumn":34},{"ruleId":"562","severity":1,"message":"670","line":36,"column":3,"nodeType":"564","messageId":"565","endLine":36,"endColumn":35},{"ruleId":"562","severity":1,"message":"671","line":37,"column":3,"nodeType":"564","messageId":"565","endLine":37,"endColumn":32},{"ruleId":"562","severity":1,"message":"672","line":38,"column":3,"nodeType":"564","messageId":"565","endLine":38,"endColumn":35},{"ruleId":"562","severity":1,"message":"673","line":39,"column":3,"nodeType":"564","messageId":"565","endLine":39,"endColumn":31},{"ruleId":"562","severity":1,"message":"674","line":40,"column":3,"nodeType":"564","messageId":"565","endLine":40,"endColumn":31},{"ruleId":"562","severity":1,"message":"675","line":41,"column":3,"nodeType":"564","messageId":"565","endLine":41,"endColumn":31},{"ruleId":"562","severity":1,"message":"676","line":42,"column":3,"nodeType":"564","messageId":"565","endLine":42,"endColumn":32},{"ruleId":"562","severity":1,"message":"677","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":28},{"ruleId":"562","severity":1,"message":"581","line":1,"column":41,"nodeType":"564","messageId":"565","endLine":1,"endColumn":56},{"ruleId":"562","severity":1,"message":"678","line":1,"column":58,"nodeType":"564","messageId":"565","endLine":1,"endColumn":65},{"ruleId":"562","severity":1,"message":"679","line":12,"column":37,"nodeType":"564","messageId":"565","endLine":12,"endColumn":43},{"ruleId":"562","severity":1,"message":"680","line":13,"column":10,"nodeType":"564","messageId":"565","endLine":13,"endColumn":19},{"ruleId":"562","severity":1,"message":"681","line":17,"column":24,"nodeType":"564","messageId":"565","endLine":17,"endColumn":33},{"ruleId":"562","severity":1,"message":"682","line":19,"column":20,"nodeType":"564","messageId":"565","endLine":19,"endColumn":35},{"ruleId":"562","severity":1,"message":"677","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":28},{"ruleId":"562","severity":1,"message":"680","line":13,"column":10,"nodeType":"564","messageId":"565","endLine":13,"endColumn":19},{"ruleId":"562","severity":1,"message":"683","line":2,"column":3,"nodeType":"564","messageId":"565","endLine":2,"endColumn":8},{"ruleId":"562","severity":1,"message":"571","line":5,"column":3,"nodeType":"564","messageId":"565","endLine":5,"endColumn":14},{"ruleId":"562","severity":1,"message":"684","line":6,"column":3,"nodeType":"564","messageId":"565","endLine":6,"endColumn":13},{"ruleId":"562","severity":1,"message":"685","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"686","line":8,"column":3,"nodeType":"564","messageId":"565","endLine":8,"endColumn":14},{"ruleId":"562","severity":1,"message":"687","line":9,"column":3,"nodeType":"564","messageId":"565","endLine":9,"endColumn":19},{"ruleId":"562","severity":1,"message":"688","line":14,"column":10,"nodeType":"564","messageId":"565","endLine":14,"endColumn":19},{"ruleId":"562","severity":1,"message":"689","line":15,"column":13,"nodeType":"564","messageId":"565","endLine":15,"endColumn":16},{"ruleId":"562","severity":1,"message":"690","line":17,"column":10,"nodeType":"564","messageId":"565","endLine":17,"endColumn":18},{"ruleId":"562","severity":1,"message":"691","line":32,"column":3,"nodeType":"564","messageId":"565","endLine":32,"endColumn":27},{"ruleId":"562","severity":1,"message":"682","line":33,"column":3,"nodeType":"564","messageId":"565","endLine":33,"endColumn":18},{"ruleId":"562","severity":1,"message":"692","line":44,"column":5,"nodeType":"564","messageId":"565","endLine":44,"endColumn":12},{"ruleId":"562","severity":1,"message":"693","line":45,"column":5,"nodeType":"564","messageId":"565","endLine":45,"endColumn":10},{"ruleId":"562","severity":1,"message":"604","line":46,"column":5,"nodeType":"564","messageId":"565","endLine":46,"endColumn":12},{"ruleId":"562","severity":1,"message":"694","line":71,"column":9,"nodeType":"564","messageId":"565","endLine":71,"endColumn":14},{"ruleId":"576","severity":1,"message":"577","line":74,"column":19,"nodeType":"578","messageId":"579","endLine":74,"endColumn":22,"suggestions":"695"},{"ruleId":"562","severity":1,"message":"696","line":2,"column":3,"nodeType":"564","messageId":"565","endLine":2,"endColumn":9},{"ruleId":"562","severity":1,"message":"697","line":8,"column":3,"nodeType":"564","messageId":"565","endLine":8,"endColumn":14},{"ruleId":"562","severity":1,"message":"698","line":13,"column":3,"nodeType":"564","messageId":"565","endLine":13,"endColumn":8},{"ruleId":"562","severity":1,"message":"689","line":4,"column":13,"nodeType":"564","messageId":"565","endLine":4,"endColumn":16},{"ruleId":"562","severity":1,"message":"612","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":7},{"ruleId":"562","severity":1,"message":"613","line":11,"column":3,"nodeType":"564","messageId":"565","endLine":11,"endColumn":11},{"ruleId":"562","severity":1,"message":"571","line":12,"column":3,"nodeType":"564","messageId":"565","endLine":12,"endColumn":14},{"ruleId":"562","severity":1,"message":"572","line":13,"column":3,"nodeType":"564","messageId":"565","endLine":13,"endColumn":12},{"ruleId":"562","severity":1,"message":"679","line":14,"column":3,"nodeType":"564","messageId":"565","endLine":14,"endColumn":9},{"ruleId":"562","severity":1,"message":"573","line":15,"column":3,"nodeType":"564","messageId":"565","endLine":15,"endColumn":8},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'AnyAction' is defined but never used.","Identifier","unusedVar","FunctionDeclaration","'FilterHeader' is defined but never used.","'ContestantsTable' is defined but never used.","'TextArea' is defined but never used.","'HStack' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'Textarea' is defined but never used.","'addContestantRequest' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["699","700"],"'useLayoutEffect' is defined but never used.","'useState' is defined but never used.","'SectionSpinner' is defined but never used.","'getContestantsRequest' is defined but never used.","'argv' is defined but never used.",["701","702"],"'onChecked' is assigned a value but never used.",["703","704"],"'FaUser' is defined but never used.","'contestantLoading' is assigned a value but never used.",["705","706"],"'formatAmount' is defined but never used.","'upForEviction' is defined but never used.","'FaSignOutAlt' is defined but never used.","'FaWindows' is defined but never used.","'FaStore' is defined but never used.","'FaTimes' is defined but never used.","'MdAccountBalanceWallet' is defined but never used.","'MdKeyboardArrowDown' is defined but never used.","'FiSettings' is defined but never used.","'FaWarehouse' is defined but never used.",["707","708"],"'toast' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'FullScreenSpinner' is defined but never used.",["709","710"],"'dispatch' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'NavLink' is defined but never used.","'labelClassName' is defined but never used.","'Text' is defined but never used.","'Checkbox' is defined but never used.","'banner' is defined but never used.",["711","712"],["713","714"],["715","716"],"'AddContestantRequestPayload' is defined but never used.","'sendMediaToS3' is defined but never used.","'object' is defined but never used.",["717","718"],["719","720"],["721","722"],["723","724"],["725","726"],["727","728"],["729","730"],["731","732"],["733","734"],["735","736"],["737","738"],["739","740"],["741","742"],"'GET_EVICTIONS_REQUEST' is defined but never used.","'UPDATE_EVICTION_REQUEST' is defined but never used.","'delay' is defined but never used.",["743","744"],["745","746"],"'CHANGE_EVICTION_STATUS_FAILURE' is defined but never used.",["747","748"],"'GET_DASHBOARD_STARTS_LOADING_INDICATOR' is defined but never used.",["749","750"],["751","752"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["753"],"'DashBoardStatsProps' is defined but never used.",["754","755"],["756","757"],"'FaEllipsisV' is defined but never used.","'Popover' is defined but never used.","'PopoverTrigger' is defined but never used.","'PopoverContent' is defined but never used.","'Box' is defined but never used.","'ContestantsProps' is defined but never used.","'Link' is defined but never used.",["758","759"],["760","761"],["762","763"],["764","765"],["766","767"],"'CHANGE_EVICTION_STATUS_REQUEST' is defined but never used.","'CHANGE_EVICTION_STATUS_SUCCESS' is defined but never used.","'ChangeEvictionStateRequestPayload' is defined but never used.","'ChangeEvictionStateRequestProp' is defined but never used.","'ChangeEvictionStateSuccessPayload' is defined but never used.","'ChangeEvictionStateSuccessProps' is defined but never used.","'GetCurrentEvictionRequestPayload' is defined but never used.","'GetCurrentEvictionRequestProp' is defined but never used.","'GetCurrentEvictionSuccessPayload' is defined but never used.","'GET_CURRENT_EVICTION_FAILURE' is defined but never used.","'GET_CURRENT_EVICTION_REQUEST' is defined but never used.","'GET_CURRENT_EVICTION_SUCCESS' is defined but never used.","'GetCurrentEvictionSuccessProp' is defined but never used.","'useCallback' is defined but never used.","'useMemo' is defined but never used.","'Select' is defined but never used.","'TiWarning' is defined but never used.","'FormInput' is defined but never used.","'getBanksRequest' is defined but never used.","'Modal' is defined but never used.","'InputGroup' is defined but never used.","'InputLeftElement' is defined but never used.","'NumberInput' is defined but never used.","'NumberInputField' is defined but never used.","'useFormik' is defined but never used.","'yup' is defined but never used.","'BsWallet' is defined but never used.","'saveWalletDetailsRequest' is defined but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","'toast' is assigned a value but never used.",["768","769"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Stack' is defined but never used.",{"messageId":"770","fix":"771","desc":"772"},{"messageId":"773","fix":"774","desc":"775"},{"messageId":"770","fix":"776","desc":"772"},{"messageId":"773","fix":"777","desc":"775"},{"messageId":"770","fix":"778","desc":"772"},{"messageId":"773","fix":"779","desc":"775"},{"messageId":"770","fix":"780","desc":"772"},{"messageId":"773","fix":"781","desc":"775"},{"messageId":"770","fix":"782","desc":"772"},{"messageId":"773","fix":"783","desc":"775"},{"messageId":"770","fix":"784","desc":"772"},{"messageId":"773","fix":"785","desc":"775"},{"messageId":"770","fix":"786","desc":"772"},{"messageId":"773","fix":"787","desc":"775"},{"messageId":"770","fix":"788","desc":"772"},{"messageId":"773","fix":"789","desc":"775"},{"messageId":"770","fix":"790","desc":"772"},{"messageId":"773","fix":"791","desc":"775"},{"messageId":"770","fix":"792","desc":"772"},{"messageId":"773","fix":"793","desc":"775"},{"messageId":"770","fix":"794","desc":"772"},{"messageId":"773","fix":"795","desc":"775"},{"messageId":"770","fix":"796","desc":"772"},{"messageId":"773","fix":"797","desc":"775"},{"messageId":"770","fix":"798","desc":"772"},{"messageId":"773","fix":"799","desc":"775"},{"messageId":"770","fix":"800","desc":"772"},{"messageId":"773","fix":"801","desc":"775"},{"messageId":"770","fix":"802","desc":"772"},{"messageId":"773","fix":"803","desc":"775"},{"messageId":"770","fix":"804","desc":"772"},{"messageId":"773","fix":"805","desc":"775"},{"messageId":"770","fix":"806","desc":"772"},{"messageId":"773","fix":"807","desc":"775"},{"messageId":"770","fix":"808","desc":"772"},{"messageId":"773","fix":"809","desc":"775"},{"messageId":"770","fix":"810","desc":"772"},{"messageId":"773","fix":"811","desc":"775"},{"messageId":"770","fix":"812","desc":"772"},{"messageId":"773","fix":"813","desc":"775"},{"messageId":"770","fix":"814","desc":"772"},{"messageId":"773","fix":"815","desc":"775"},{"messageId":"770","fix":"816","desc":"772"},{"messageId":"773","fix":"817","desc":"775"},{"messageId":"770","fix":"818","desc":"772"},{"messageId":"773","fix":"819","desc":"775"},{"messageId":"770","fix":"820","desc":"772"},{"messageId":"773","fix":"821","desc":"775"},{"messageId":"770","fix":"822","desc":"772"},{"messageId":"773","fix":"823","desc":"775"},{"messageId":"770","fix":"824","desc":"772"},{"messageId":"773","fix":"825","desc":"775"},{"messageId":"770","fix":"826","desc":"772"},{"messageId":"773","fix":"827","desc":"775"},{"messageId":"828","fix":"829","desc":"830"},{"messageId":"770","fix":"831","desc":"772"},{"messageId":"773","fix":"832","desc":"775"},{"messageId":"770","fix":"833","desc":"772"},{"messageId":"773","fix":"834","desc":"775"},{"messageId":"770","fix":"835","desc":"772"},{"messageId":"773","fix":"836","desc":"775"},{"messageId":"770","fix":"837","desc":"772"},{"messageId":"773","fix":"838","desc":"775"},{"messageId":"770","fix":"839","desc":"772"},{"messageId":"773","fix":"840","desc":"775"},{"messageId":"770","fix":"841","desc":"772"},{"messageId":"773","fix":"842","desc":"775"},{"messageId":"770","fix":"843","desc":"772"},{"messageId":"773","fix":"844","desc":"775"},{"messageId":"770","fix":"845","desc":"772"},{"messageId":"773","fix":"846","desc":"775"},"suggestUnknown",{"range":"847","text":"848"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"847","text":"849"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"850","text":"848"},{"range":"850","text":"849"},{"range":"851","text":"848"},{"range":"851","text":"849"},{"range":"852","text":"848"},{"range":"852","text":"849"},{"range":"853","text":"848"},{"range":"853","text":"849"},{"range":"854","text":"848"},{"range":"854","text":"849"},{"range":"855","text":"848"},{"range":"855","text":"849"},{"range":"856","text":"848"},{"range":"856","text":"849"},{"range":"857","text":"848"},{"range":"857","text":"849"},{"range":"858","text":"848"},{"range":"858","text":"849"},{"range":"859","text":"848"},{"range":"859","text":"849"},{"range":"860","text":"848"},{"range":"860","text":"849"},{"range":"861","text":"848"},{"range":"861","text":"849"},{"range":"862","text":"848"},{"range":"862","text":"849"},{"range":"863","text":"848"},{"range":"863","text":"849"},{"range":"864","text":"848"},{"range":"864","text":"849"},{"range":"865","text":"848"},{"range":"865","text":"849"},{"range":"866","text":"848"},{"range":"866","text":"849"},{"range":"867","text":"848"},{"range":"867","text":"849"},{"range":"868","text":"848"},{"range":"868","text":"849"},{"range":"869","text":"848"},{"range":"869","text":"849"},{"range":"870","text":"848"},{"range":"870","text":"849"},{"range":"871","text":"848"},{"range":"871","text":"849"},{"range":"872","text":"848"},{"range":"872","text":"849"},{"range":"873","text":"848"},{"range":"873","text":"849"},{"range":"874","text":"848"},{"range":"874","text":"849"},{"range":"875","text":"848"},{"range":"875","text":"849"},"suggestOptionalChain",{"range":"876","text":"877"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"878","text":"848"},{"range":"878","text":"849"},{"range":"879","text":"848"},{"range":"879","text":"849"},{"range":"880","text":"848"},{"range":"880","text":"849"},{"range":"881","text":"848"},{"range":"881","text":"849"},{"range":"882","text":"848"},{"range":"882","text":"849"},{"range":"883","text":"848"},{"range":"883","text":"849"},{"range":"884","text":"848"},{"range":"884","text":"849"},{"range":"885","text":"848"},{"range":"885","text":"849"},[2546,2549],"unknown","never",[2871,2874],[3679,3682],[2371,2374],[1837,1840],[346,349],[804,807],[882,885],[1600,1603],[2294,2297],[9407,9410],[9531,9534],[9670,9673],[9792,9795],[9917,9920],[10050,10053],[8790,8793],[8907,8910],[9025,9028],[9144,9147],[9274,9277],[9415,9418],[2947,2950],[3079,3082],[141,144],[1097,1100],[1247,1250],[1218,1219],"?.",[2972,2975],[3105,3108],[1480,1483],[5309,5312],[5440,5443],[5565,5568],[5680,5683],[1876,1879]]